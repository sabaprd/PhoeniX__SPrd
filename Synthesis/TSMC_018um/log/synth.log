Qflow synthesis logfile created on Thu 31 Aug 2023 02:02:32 PM +0330
Running yosys for verilog parsing and synthesis
yosys  -s phoeniX.ys

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `phoeniX.ys' --

1. Executing Liberty frontend.
Imported 32 cell types from liberty file.

2. Executing Verilog-2005 frontend: /home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v
Parsing Verilog input from `/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:588)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:716)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:765)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:770)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:857)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:927)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:963)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1026)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1027)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1062)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1080)
Warning: Yosys has only limited support for tri-state logic at the moment. (/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1125)
Generating RTLIL representation for module `\phoeniX'.
Generating RTLIL representation for module `\Fetch_Unit'.
Generating RTLIL representation for module `\Instruction_Decoder'.
/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:648: Warning: Identifier `\instruction_type_i' is implicitly declared.
/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:654: Warning: Identifier `\instruction_type_b' is implicitly declared.
/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:656: Warning: Identifier `\instruction_type_r' is implicitly declared.
/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:659: Warning: Identifier `\instruction_type_s' is implicitly declared.
/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:662: Warning: Identifier `\instruction_type_u' is implicitly declared.
/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:665: Warning: Identifier `\instruction_type_j' is implicitly declared.
Generating RTLIL representation for module `\Immediate_Generator'.
Generating RTLIL representation for module `\Register_File'.
Generating RTLIL representation for module `\Arithmetic_Logic_Unit'.
Generating RTLIL representation for module `\Jump_Branch_Unit'.
Generating RTLIL representation for module `\Address_Generator'.
Generating RTLIL representation for module `\Load_Store_Unit'.
Generating RTLIL representation for module `\Hazard_Forward_Unit'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \phoeniX
Used module:     \Hazard_Forward_Unit
Used module:     \Register_File
Used module:     \Load_Store_Unit
Used module:     \Jump_Branch_Unit
Used module:     \Address_Generator
Used module:     \Arithmetic_Logic_Unit
Used module:     \Immediate_Generator
Used module:     \Instruction_Decoder
Used module:     \Fetch_Unit

3.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\Register_File'.
Parameter \WIDTH = 32
Parameter \DEPTH = 5
Generating RTLIL representation for module `$paramod\Register_File\WIDTH=32\DEPTH=5'.

3.1.3. Analyzing design hierarchy..
Top module:  \phoeniX
Used module:     \Hazard_Forward_Unit
Used module:     $paramod\Register_File\WIDTH=32\DEPTH=5
Used module:     \Load_Store_Unit
Used module:     \Jump_Branch_Unit
Used module:     \Address_Generator
Used module:     \Arithmetic_Logic_Unit
Used module:     \Immediate_Generator
Used module:     \Instruction_Decoder
Used module:     \Fetch_Unit

3.1.4. Analyzing design hierarchy..
Top module:  \phoeniX
Used module:     \Hazard_Forward_Unit
Used module:     $paramod\Register_File\WIDTH=32\DEPTH=5
Used module:     \Load_Store_Unit
Used module:     \Jump_Branch_Unit
Used module:     \Address_Generator
Used module:     \Arithmetic_Logic_Unit
Used module:     \Immediate_Generator
Used module:     \Instruction_Decoder
Used module:     \Fetch_Unit
Removing unused module `\Register_File'.
Removed 1 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1104$356 in module Hazard_Forward_Unit.
Marked 2 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334 in module Load_Store_Unit.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:968$313 in module Load_Store_Unit.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:958$312 in module Load_Store_Unit.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:918$310 in module Address_Generator.
Marked 9 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:877$298 in module Jump_Branch_Unit.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:824$271 in module Arithmetic_Logic_Unit.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:815$270 in module Arithmetic_Logic_Unit.
Removed 1 dead cases from process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:806$269 in module Arithmetic_Logic_Unit.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:806$269 in module Arithmetic_Logic_Unit.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:795$268 in module Arithmetic_Logic_Unit.
Marked 2 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:760$535 in module $paramod\Register_File\WIDTH=32\DEPTH=5.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:709$60 in module Immediate_Generator.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:683$58 in module Instruction_Decoder.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:578$21 in module phoeniX.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:485$12 in module phoeniX.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:468$11 in module phoeniX.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7 in module phoeniX.
Marked 1 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:156$3 in module phoeniX.
Marked 2 switch rules as full_case in process $proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:137$2 in module phoeniX.
Removed a total of 1 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1026$355'.
  Set init value: \store_data_reg = 32'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\Hazard_Forward_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1104$356'.
     1/2: $0\forward_data[31:0]
     2/2: $0\forward_enable[0:0]
Creating decoders for process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1026$355'.
     1/1: $1\store_data_reg[31:0]
Creating decoders for process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334'.
     1/6: $0\store_data_reg[31:0] [31:24]
     2/6: $0\store_data_reg[31:0] [6:0]
     3/6: $0\store_data_reg[31:0] [15:8]
     4/6: $0\store_data_reg[31:0] [23:16]
     5/6: $0\store_data_reg[31:0] [7]
     6/6: $0\load_data[31:0]
Creating decoders for process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:968$313'.
     1/3: { $1\memory_interface_state[0:0] $1\memory_interface_frame_mask[3:0] }
     2/3: $0\memory_interface_frame_mask[3:0]
     3/3: $0\memory_interface_state[0:0]
Creating decoders for process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:958$312'.
     1/4: $1\memory_interface_address[31:0]
     2/4: $1\memory_interface_enable[0:0]
     3/4: $0\memory_interface_address[31:0]
     4/4: $0\memory_interface_enable[0:0]
Creating decoders for process `\Address_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:918$310'.
     1/3: $1\value[31:0]
     2/3: $0\address[31:0]
     3/3: $0\value[31:0]
Creating decoders for process `\Jump_Branch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:877$298'.
     1/11: $1\jump_enable[0:0]
     2/11: $8\branch_enable[0:0]
     3/11: $7\branch_enable[0:0]
     4/11: $6\branch_enable[0:0]
     5/11: $5\branch_enable[0:0]
     6/11: $4\branch_enable[0:0]
     7/11: $3\branch_enable[0:0]
     8/11: $2\branch_enable[0:0]
     9/11: $1\branch_enable[0:0]
    10/11: $0\jump_enable[0:0]
    11/11: $0\branch_enable[0:0]
Creating decoders for process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:824$271'.
     1/2: $1\alu_output[31:0]
     2/2: $0\alu_output[31:0]
Creating decoders for process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:815$270'.
     1/2: $1\operand_2[31:0]
     2/2: $0\operand_2[31:0]
Creating decoders for process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:806$269'.
     1/2: $1\operand_1[31:0]
     2/2: $0\operand_1[31:0]
Creating decoders for process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:795$268'.
     1/4: $1\mux2_select[1:0]
     2/4: $1\mux1_select[0:0]
     3/4: $0\mux2_select[1:0]
     4/4: $0\mux1_select[0:0]
Creating decoders for process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:760$535'.
     1/2: $0\read_data_2[31:0]
     2/2: $0\read_data_1[31:0]
Creating decoders for process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:752$528'.
     1/3: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531
     2/3: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_DATA[31:0]$530
     3/3: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_ADDR[4:0]$529
Creating decoders for process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
     1/97: $0\i[31:0]
     2/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$429_EN[31:0]$527
     3/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$429_DATA[31:0]$526
     4/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$429_ADDR[31:0]$525
     5/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$428_EN[31:0]$524
     6/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$428_DATA[31:0]$523
     7/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$428_ADDR[31:0]$522
     8/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$427_EN[31:0]$521
     9/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$427_DATA[31:0]$520
    10/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$427_ADDR[31:0]$519
    11/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$426_EN[31:0]$518
    12/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$426_DATA[31:0]$517
    13/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$426_ADDR[31:0]$516
    14/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$425_EN[31:0]$515
    15/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$425_DATA[31:0]$514
    16/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$425_ADDR[31:0]$513
    17/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$424_EN[31:0]$512
    18/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$424_DATA[31:0]$511
    19/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$424_ADDR[31:0]$510
    20/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$423_EN[31:0]$509
    21/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$423_DATA[31:0]$508
    22/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$423_ADDR[31:0]$507
    23/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$422_EN[31:0]$506
    24/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$422_DATA[31:0]$505
    25/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$422_ADDR[31:0]$504
    26/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$421_EN[31:0]$503
    27/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$421_DATA[31:0]$502
    28/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$421_ADDR[31:0]$501
    29/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$420_EN[31:0]$500
    30/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$420_DATA[31:0]$499
    31/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$420_ADDR[31:0]$498
    32/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$419_EN[31:0]$497
    33/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$419_DATA[31:0]$496
    34/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$419_ADDR[31:0]$495
    35/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$418_EN[31:0]$494
    36/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$418_DATA[31:0]$493
    37/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$418_ADDR[31:0]$492
    38/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$417_EN[31:0]$491
    39/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$417_DATA[31:0]$490
    40/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$417_ADDR[31:0]$489
    41/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$416_EN[31:0]$488
    42/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$416_DATA[31:0]$487
    43/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$416_ADDR[31:0]$486
    44/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$415_EN[31:0]$485
    45/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$415_DATA[31:0]$484
    46/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$415_ADDR[31:0]$483
    47/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$414_EN[31:0]$482
    48/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$414_DATA[31:0]$481
    49/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$414_ADDR[31:0]$480
    50/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$413_EN[31:0]$479
    51/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$413_DATA[31:0]$478
    52/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$413_ADDR[31:0]$477
    53/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$412_EN[31:0]$476
    54/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$412_DATA[31:0]$475
    55/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$412_ADDR[31:0]$474
    56/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$411_EN[31:0]$473
    57/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$411_DATA[31:0]$472
    58/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$411_ADDR[31:0]$471
    59/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$410_EN[31:0]$470
    60/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$410_DATA[31:0]$469
    61/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$410_ADDR[31:0]$468
    62/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$409_EN[31:0]$467
    63/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$409_DATA[31:0]$466
    64/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$409_ADDR[31:0]$465
    65/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$408_EN[31:0]$464
    66/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$408_DATA[31:0]$463
    67/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$408_ADDR[31:0]$462
    68/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$407_EN[31:0]$461
    69/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$407_DATA[31:0]$460
    70/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$407_ADDR[31:0]$459
    71/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$406_EN[31:0]$458
    72/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$406_DATA[31:0]$457
    73/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$406_ADDR[31:0]$456
    74/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$405_EN[31:0]$455
    75/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$405_DATA[31:0]$454
    76/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$405_ADDR[31:0]$453
    77/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$404_EN[31:0]$452
    78/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$404_DATA[31:0]$451
    79/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$404_ADDR[31:0]$450
    80/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$403_EN[31:0]$449
    81/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$403_DATA[31:0]$448
    82/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$403_ADDR[31:0]$447
    83/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$402_EN[31:0]$446
    84/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$402_DATA[31:0]$445
    85/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$402_ADDR[31:0]$444
    86/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$401_EN[31:0]$443
    87/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$401_DATA[31:0]$442
    88/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$401_ADDR[31:0]$441
    89/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$400_EN[31:0]$435
    90/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$400_DATA[31:0]$434
    91/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$400_ADDR[31:0]$433
    92/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$399_EN[31:0]$432
    93/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$399_DATA[31:0]$439
    94/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$399_ADDR[31:0]$440
    95/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$398_EN[31:0]$438
    96/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$398_DATA[31:0]$437
    97/97: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$398_ADDR[31:0]$436
Creating decoders for process `\Immediate_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:709$60'.
     1/2: $1\immediate[31:0]
     2/2: $0\immediate[31:0]
Creating decoders for process `\Instruction_Decoder.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:683$58'.
     1/6: $1\write_enable[0:0]
     2/6: $1\read_enable_2[0:0]
     3/6: $1\read_enable_1[0:0]
     4/6: $0\read_enable_2[0:0]
     5/6: $0\read_enable_1[0:0]
     6/6: $0\write_enable[0:0]
Creating decoders for process `\Fetch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:616$28'.
     1/4: $0\memory_interface_address[31:0]
     2/4: $0\memory_interface_frame_mask[3:0]
     3/4: $0\memory_interface_state[0:0]
     4/4: $0\memory_interface_enable[0:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:578$21'.
     1/4: $1\PC_stall_address[31:0]
     2/4: $1\stall[0:0]
     3/4: $0\stall[0:0]
     4/4: $0\PC_stall_address[31:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:485$12'.
     1/6: $1\write_data[31:0]
     2/6: $1\write_index[4:0]
     3/6: $1\write_enable[0:0]
     4/6: $0\write_data[31:0]
     5/6: $0\write_index[4:0]
     6/6: $0\write_enable[0:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:468$11'.
     1/2: $1\write_data_writeback_reg[31:0]
     2/2: $0\write_data_writeback_reg[31:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
     1/12: $0\result_writeback_reg[31:0]
     2/12: $0\load_data_writeback_reg[31:0]
     3/12: $0\write_enable_writeback_reg[0:0]
     4/12: $0\write_index_writeback_reg[4:0]
     5/12: $0\instruction_type_writeback_reg[2:0]
     6/12: $0\immediate_writeback_reg[31:0]
     7/12: $0\funct12_writeback_reg[11:0]
     8/12: $0\funct7_writeback_reg[6:0]
     9/12: $0\funct3_writeback_reg[2:0]
    10/12: $0\opcode_writeback_reg[6:0]
    11/12: $0\instruction_writeback_reg[31:0]
    12/12: $0\PC_writeback_reg[31:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
     1/14: $0\jump_branch_enable_memory_reg[0:0]
     2/14: $0\result_memory_reg[31:0]
     3/14: $0\bus_rs2_memory_reg[31:0]
     4/14: $0\address_memory_reg[31:0]
     5/14: $0\write_enable_memory_reg[0:0]
     6/14: $0\write_index_memory_reg[4:0]
     7/14: $0\instruction_type_memory_reg[2:0]
     8/14: $0\immediate_memory_reg[31:0]
     9/14: $0\funct12_memory_reg[11:0]
    10/14: $0\funct7_memory_reg[6:0]
    11/14: $0\funct3_memory_reg[2:0]
    12/14: $0\opcode_memory_reg[6:0]
    13/14: $0\instruction_memory_reg[31:0]
    14/14: $0\PC_memory_reg[31:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
     1/12: $0\bus_rs2[31:0]
     2/12: $0\bus_rs1[31:0]
     3/12: $0\write_index_execute_reg[4:0]
     4/12: $0\instruction_type_execute_reg[2:0]
     5/12: $0\immediate_execute_reg[31:0]
     6/12: $0\PC_execute_reg[31:0]
     7/12: $0\write_enable_execute_reg[0:0]
     8/12: $0\funct12_execute_reg[11:0]
     9/12: $0\funct7_execute_reg[6:0]
    10/12: $0\funct3_execute_reg[2:0]
    11/12: $0\opcode_execute_reg[6:0]
    12/12: $0\instruction_execute_reg[31:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:156$3'.
     1/2: $0\PC_decode_reg[31:0]
     2/2: $0\instruction_decode_reg[31:0]
Creating decoders for process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:137$2'.
     1/1: $0\PC_fetch_reg[31:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\Hazard_Forward_Unit.\forward_enable' from process `\Hazard_Forward_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1104$356'.
No latch inferred for signal `\Hazard_Forward_Unit.\forward_data' from process `\Hazard_Forward_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1104$356'.
Latch inferred for signal `\Load_Store_Unit.\load_data' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334': $auto$proc_dlatch.cc:409:proc_dlatch$1082
Latch inferred for signal `\Load_Store_Unit.\store_data_reg [6:0]' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334': $auto$proc_dlatch.cc:409:proc_dlatch$1135
Latch inferred for signal `\Load_Store_Unit.\store_data_reg [7]' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334': $auto$proc_dlatch.cc:409:proc_dlatch$1188
Latch inferred for signal `\Load_Store_Unit.\store_data_reg [15:8]' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334': $auto$proc_dlatch.cc:409:proc_dlatch$1225
Latch inferred for signal `\Load_Store_Unit.\store_data_reg [23:16]' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334': $auto$proc_dlatch.cc:409:proc_dlatch$1278
Latch inferred for signal `\Load_Store_Unit.\store_data_reg [31:24]' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334': $auto$proc_dlatch.cc:409:proc_dlatch$1323
No latch inferred for signal `\Load_Store_Unit.\memory_interface_state' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:968$313'.
No latch inferred for signal `\Load_Store_Unit.\memory_interface_frame_mask' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:968$313'.
No latch inferred for signal `\Load_Store_Unit.\memory_interface_enable' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:958$312'.
No latch inferred for signal `\Load_Store_Unit.\memory_interface_address' from process `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:958$312'.
No latch inferred for signal `\Address_Generator.\address' from process `\Address_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:918$310'.
No latch inferred for signal `\Address_Generator.\value' from process `\Address_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:918$310'.
No latch inferred for signal `\Jump_Branch_Unit.\jump_enable' from process `\Jump_Branch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:877$298'.
Latch inferred for signal `\Jump_Branch_Unit.\branch_enable' from process `\Jump_Branch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:877$298': $auto$proc_dlatch.cc:409:proc_dlatch$1484
No latch inferred for signal `\Arithmetic_Logic_Unit.\alu_output' from process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:824$271'.
Latch inferred for signal `\Arithmetic_Logic_Unit.\operand_2' from process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:815$270': $auto$proc_dlatch.cc:409:proc_dlatch$1507
No latch inferred for signal `\Arithmetic_Logic_Unit.\operand_1' from process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:806$269'.
Latch inferred for signal `\Arithmetic_Logic_Unit.\mux1_select' from process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:795$268': $auto$proc_dlatch.cc:409:proc_dlatch$1536
Latch inferred for signal `\Arithmetic_Logic_Unit.\mux2_select' from process `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:795$268': $auto$proc_dlatch.cc:409:proc_dlatch$1565
No latch inferred for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.\read_data_1' from process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:760$535'.
No latch inferred for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.\read_data_2' from process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:760$535'.
No latch inferred for signal `\Immediate_Generator.\immediate' from process `\Immediate_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:709$60'.
Latch inferred for signal `\Instruction_Decoder.\write_enable' from process `\Instruction_Decoder.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:683$58': $auto$proc_dlatch.cc:409:proc_dlatch$1614
Latch inferred for signal `\Instruction_Decoder.\read_enable_1' from process `\Instruction_Decoder.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:683$58': $auto$proc_dlatch.cc:409:proc_dlatch$1655
Latch inferred for signal `\Instruction_Decoder.\read_enable_2' from process `\Instruction_Decoder.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:683$58': $auto$proc_dlatch.cc:409:proc_dlatch$1696
No latch inferred for signal `\Fetch_Unit.\memory_interface_enable' from process `\Fetch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:616$28'.
No latch inferred for signal `\Fetch_Unit.\memory_interface_state' from process `\Fetch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:616$28'.
No latch inferred for signal `\Fetch_Unit.\memory_interface_address' from process `\Fetch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:616$28'.
No latch inferred for signal `\Fetch_Unit.\memory_interface_frame_mask' from process `\Fetch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:616$28'.
No latch inferred for signal `\phoeniX.\PC_stall_address' from process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:578$21'.
No latch inferred for signal `\phoeniX.\stall' from process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:578$21'.
No latch inferred for signal `\phoeniX.\write_enable' from process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:485$12'.
No latch inferred for signal `\phoeniX.\write_index' from process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:485$12'.
No latch inferred for signal `\phoeniX.\write_data' from process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:485$12'.
Latch inferred for signal `\phoeniX.\write_data_writeback_reg' from process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:468$11': $auto$proc_dlatch.cc:409:proc_dlatch$1743

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:752$528'.
  created $dff cell `$procdff$1744' with negative edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:752$528'.
  created $dff cell `$procdff$1745' with negative edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:752$528'.
  created $dff cell `$procdff$1746' with negative edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.\i' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1747' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$399_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1748' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$400_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1749' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$400_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1750' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$400_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1751' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$398_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1752' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$398_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1753' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$398_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1754' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$399_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1755' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$399_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1756' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$401_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1757' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$401_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1758' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$401_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1759' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$402_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1760' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$402_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1761' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$402_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1762' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$403_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1763' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$403_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1764' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$403_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1765' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$404_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1766' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$404_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1767' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$404_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1768' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$405_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1769' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$405_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1770' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$405_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1771' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$406_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1772' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$406_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1773' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$406_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1774' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$407_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1775' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$407_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1776' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$407_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1777' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$408_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1778' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$408_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1779' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$408_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1780' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$409_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1781' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$409_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1782' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$409_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1783' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$410_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1784' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$410_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1785' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$410_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1786' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$411_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1787' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$411_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1788' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$411_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1789' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$412_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1790' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$412_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1791' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$412_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1792' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$413_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1793' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$413_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1794' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$413_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1795' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$414_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1796' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$414_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1797' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$414_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1798' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$415_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1799' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$415_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1800' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$415_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1801' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$416_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1802' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$416_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1803' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$416_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1804' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$417_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1805' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$417_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1806' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$417_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1807' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$418_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1808' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$418_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1809' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$418_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1810' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$419_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1811' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$419_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1812' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$419_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1813' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$420_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1814' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$420_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1815' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$420_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1816' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$421_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1817' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$421_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1818' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$421_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1819' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$422_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1820' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$422_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1821' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$422_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1822' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$423_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1823' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$423_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1824' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$423_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1825' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$424_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1826' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$424_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1827' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$424_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1828' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$425_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1829' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$425_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1830' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$425_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1831' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$426_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1832' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$426_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1833' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$426_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1834' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$427_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1835' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$427_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1836' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$427_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1837' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$428_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1838' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$428_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1839' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$428_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1840' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$429_ADDR' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1841' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$429_DATA' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1842' with positive edge clock.
Creating register for signal `$paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$429_EN' using process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
  created $dff cell `$procdff$1843' with positive edge clock.
Creating register for signal `\phoeniX.\PC_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1844' with positive edge clock.
Creating register for signal `\phoeniX.\instruction_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1845' with positive edge clock.
Creating register for signal `\phoeniX.\opcode_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1846' with positive edge clock.
Creating register for signal `\phoeniX.\funct3_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1847' with positive edge clock.
Creating register for signal `\phoeniX.\funct7_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1848' with positive edge clock.
Creating register for signal `\phoeniX.\funct12_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1849' with positive edge clock.
Creating register for signal `\phoeniX.\immediate_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1850' with positive edge clock.
Creating register for signal `\phoeniX.\instruction_type_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1851' with positive edge clock.
Creating register for signal `\phoeniX.\write_index_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1852' with positive edge clock.
Creating register for signal `\phoeniX.\write_enable_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1853' with positive edge clock.
Creating register for signal `\phoeniX.\load_data_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1854' with positive edge clock.
Creating register for signal `\phoeniX.\result_writeback_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
  created $dff cell `$procdff$1855' with positive edge clock.
Creating register for signal `\phoeniX.\PC_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1856' with positive edge clock.
Creating register for signal `\phoeniX.\instruction_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1857' with positive edge clock.
Creating register for signal `\phoeniX.\opcode_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1858' with positive edge clock.
Creating register for signal `\phoeniX.\funct3_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1859' with positive edge clock.
Creating register for signal `\phoeniX.\funct7_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1860' with positive edge clock.
Creating register for signal `\phoeniX.\funct12_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1861' with positive edge clock.
Creating register for signal `\phoeniX.\immediate_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1862' with positive edge clock.
Creating register for signal `\phoeniX.\instruction_type_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1863' with positive edge clock.
Creating register for signal `\phoeniX.\write_index_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1864' with positive edge clock.
Creating register for signal `\phoeniX.\write_enable_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1865' with positive edge clock.
Creating register for signal `\phoeniX.\address_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1866' with positive edge clock.
Creating register for signal `\phoeniX.\bus_rs2_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1867' with positive edge clock.
Creating register for signal `\phoeniX.\result_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1868' with positive edge clock.
Creating register for signal `\phoeniX.\jump_branch_enable_memory_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
  created $dff cell `$procdff$1869' with positive edge clock.
Creating register for signal `\phoeniX.\PC_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1870' with positive edge clock.
Creating register for signal `\phoeniX.\instruction_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1871' with positive edge clock.
Creating register for signal `\phoeniX.\opcode_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1872' with positive edge clock.
Creating register for signal `\phoeniX.\funct3_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1873' with positive edge clock.
Creating register for signal `\phoeniX.\funct7_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1874' with positive edge clock.
Creating register for signal `\phoeniX.\funct12_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1875' with positive edge clock.
Creating register for signal `\phoeniX.\immediate_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1876' with positive edge clock.
Creating register for signal `\phoeniX.\instruction_type_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1877' with positive edge clock.
Creating register for signal `\phoeniX.\write_index_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1878' with positive edge clock.
Creating register for signal `\phoeniX.\write_enable_execute_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1879' with positive edge clock.
Creating register for signal `\phoeniX.\bus_rs1' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1880' with positive edge clock.
Creating register for signal `\phoeniX.\bus_rs2' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
  created $dff cell `$procdff$1881' with positive edge clock.
Creating register for signal `\phoeniX.\instruction_decode_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:156$3'.
  created $dff cell `$procdff$1882' with positive edge clock.
Creating register for signal `\phoeniX.\PC_decode_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:156$3'.
  created $dff cell `$procdff$1883' with positive edge clock.
Creating register for signal `\phoeniX.\PC_fetch_reg' using process `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:137$2'.
  created $dff cell `$procdff$1884' with positive edge clock.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\Hazard_Forward_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1104$356'.
Removing empty process `Hazard_Forward_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1104$356'.
Removing empty process `Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1026$355'.
Found and cleaned up 22 empty switches in `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334'.
Removing empty process `Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1030$334'.
Found and cleaned up 1 empty switch in `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:968$313'.
Removing empty process `Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:968$313'.
Found and cleaned up 1 empty switch in `\Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:958$312'.
Removing empty process `Load_Store_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:958$312'.
Found and cleaned up 1 empty switch in `\Address_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:918$310'.
Removing empty process `Address_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:918$310'.
Found and cleaned up 9 empty switches in `\Jump_Branch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:877$298'.
Removing empty process `Jump_Branch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:877$298'.
Found and cleaned up 1 empty switch in `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:824$271'.
Removing empty process `Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:824$271'.
Found and cleaned up 1 empty switch in `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:815$270'.
Removing empty process `Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:815$270'.
Found and cleaned up 1 empty switch in `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:806$269'.
Removing empty process `Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:806$269'.
Found and cleaned up 1 empty switch in `\Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:795$268'.
Removing empty process `Arithmetic_Logic_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:795$268'.
Found and cleaned up 2 empty switches in `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:760$535'.
Removing empty process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:760$535'.
Found and cleaned up 1 empty switch in `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:752$528'.
Removing empty process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:752$528'.
Removing empty process `$paramod\Register_File\WIDTH=32\DEPTH=5.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:746$431'.
Found and cleaned up 1 empty switch in `\Immediate_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:709$60'.
Removing empty process `Immediate_Generator.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:709$60'.
Found and cleaned up 2 empty switches in `\Instruction_Decoder.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:683$58'.
Removing empty process `Instruction_Decoder.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:683$58'.
Removing empty process `Fetch_Unit.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:616$28'.
Found and cleaned up 1 empty switch in `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:578$21'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:578$21'.
Found and cleaned up 1 empty switch in `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:485$12'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:485$12'.
Found and cleaned up 1 empty switch in `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:468$11'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:468$11'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:445$10'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:376$9'.
Found and cleaned up 1 empty switch in `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:259$7'.
Found and cleaned up 1 empty switch in `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:156$3'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:156$3'.
Found and cleaned up 2 empty switches in `\phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:137$2'.
Removing empty process `phoeniX.$proc$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:137$2'.
Cleaned up 54 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module Hazard_Forward_Unit.
<suppressed ~3 debug messages>
Optimizing module Load_Store_Unit.
<suppressed ~127 debug messages>
Optimizing module Address_Generator.
Optimizing module Jump_Branch_Unit.
<suppressed ~73 debug messages>
Optimizing module Arithmetic_Logic_Unit.
<suppressed ~19 debug messages>
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
<suppressed ~4 debug messages>
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
<suppressed ~31 debug messages>
Optimizing module Fetch_Unit.
Optimizing module phoeniX.
<suppressed ~9 debug messages>

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 18 unused cells and 574 unused wires.
<suppressed ~44 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod\Register_File\WIDTH=32\DEPTH=5..
checking module Address_Generator..
checking module Arithmetic_Logic_Unit..
checking module Fetch_Unit..
checking module Hazard_Forward_Unit..
checking module Immediate_Generator..
checking module Instruction_Decoder..
checking module Jump_Branch_Unit..
checking module Load_Store_Unit..
checking module phoeniX..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
<suppressed ~189 debug messages>
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
<suppressed ~72 debug messages>
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
<suppressed ~105 debug messages>
Finding identical cells in module `\Jump_Branch_Unit'.
<suppressed ~18 debug messages>
Finding identical cells in module `\Load_Store_Unit'.
<suppressed ~258 debug messages>
Finding identical cells in module `\phoeniX'.
<suppressed ~18 debug messages>
Removed a total of 220 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
    Consolidated identical input bits for $mux cell $procmux$840:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531
      New ports: A=1'0, B=1'1, Y=$0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0]
      New connections: $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [31:1] = { $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] $0$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$430_EN[31:0]$531 [0] }
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
    New ctrl vector for $pmux cell $procmux$698: { $auto$opt_reduce.cc:132:opt_mux$1888 $auto$opt_reduce.cc:132:opt_mux$1886 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1887: { $procmux$703_CMP $procmux$700_CMP $procmux$702_CMP }
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
    New ctrl vector for $pmux cell $procmux$791: { $procmux$812_CMP $procmux$811_CMP $procmux$810_CMP $auto$opt_reduce.cc:132:opt_mux$1900 $procmux$803_CMP $procmux$802_CMP $procmux$801_CMP $procmux$800_CMP $auto$opt_reduce.cc:132:opt_mux$1898 $auto$opt_reduce.cc:132:opt_mux$1896 $auto$opt_reduce.cc:132:opt_mux$1894 $auto$opt_reduce.cc:132:opt_mux$1892 $auto$opt_reduce.cc:132:opt_mux$1890 }
    New ctrl vector for $pmux cell $procmux$815: { $procmux$817_CMP $procmux$816_CMP }
    New ctrl vector for $pmux cell $procmux$823: { $procmux$826_CMP $auto$opt_reduce.cc:132:opt_mux$1902 }
    New ctrl vector for $pmux cell $procmux$829: $auto$opt_reduce.cc:132:opt_mux$1904
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1889: { $procmux$792_CMP $procmux$793_CMP $procmux$794_CMP $procmux$804_CMP $procmux$813_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1891: { $procmux$795_CMP $procmux$805_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1893: { $procmux$796_CMP $procmux$806_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1895: { $procmux$797_CMP $procmux$798_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1897: { $procmux$799_CMP $procmux$809_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1899: { $procmux$807_CMP $procmux$808_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1901: { $procmux$794_CMP $procmux$825_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1903: { $procmux$794_CMP $procmux$825_CMP }
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
    New ctrl vector for $pmux cell $procmux$854: $auto$opt_reduce.cc:132:opt_mux$1906
    New ctrl vector for $pmux cell $procmux$862: $auto$opt_reduce.cc:132:opt_mux$1908
    New ctrl vector for $pmux cell $procmux$870: $auto$opt_reduce.cc:132:opt_mux$1910
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1905: { $procmux$858_CMP $procmux$859_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1907: { $procmux$858_CMP $procmux$855_CMP $procmux$859_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1909: { $procmux$856_CMP $procmux$857_CMP }
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1468: { $auto$rtlil.cc:1862:And$1347 $auto$rtlil.cc:1862:And$1371 $auto$rtlil.cc:1862:And$1395 $auto$rtlil.cc:1862:And$1419 $auto$rtlil.cc:1862:And$1443 $auto$rtlil.cc:1862:And$1467 }
    New ctrl vector for $pmux cell $procmux$778: $auto$opt_reduce.cc:132:opt_mux$1912
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1911: { $procmux$713_CMP $procmux$759_CMP $procmux$746_CMP $procmux$734_CMP $procmux$723_CMP $procmux$773_CMP }
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
    New input vector for $reduce_or cell $procmux$688_ANY: { $procmux$688_CMP [0] $procmux$688_CMP [1] }
    New input vector for $reduce_or cell $procmux$687_ANY: { $procmux$687_CMP [0] $procmux$687_CMP [1] }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1313: { $auto$rtlil.cc:1862:And$1243 $auto$rtlil.cc:1862:And$1255 $auto$rtlil.cc:1862:And$1312 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1268: { $auto$rtlil.cc:1862:And$1243 $auto$rtlil.cc:1862:And$1255 $auto$rtlil.cc:1862:And$1267 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1215: { $auto$rtlil.cc:1862:And$1112 $auto$rtlil.cc:1862:And$1214 $auto$rtlil.cc:1862:And$1243 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1178: { $auto$rtlil.cc:1862:And$1112 $auto$rtlil.cc:1862:And$1177 $auto$rtlil.cc:1862:And$1243 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1125: { $auto$rtlil.cc:1862:And$1112 $auto$rtlil.cc:1862:And$1124 $auto$rtlil.cc:1862:And$1243 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1072: { $auto$rtlil.cc:1862:And$959 $auto$rtlil.cc:1862:And$979 $auto$rtlil.cc:1862:And$999 $auto$rtlil.cc:1862:And$1035 $auto$rtlil.cc:1862:And$1071 }
    New ctrl vector for $pmux cell $procmux$592: { $procmux$596_CMP $procmux$593_CMP }
    New ctrl vector for $pmux cell $procmux$603: { }
    New ctrl vector for $pmux cell $procmux$614: $auto$opt_reduce.cc:132:opt_mux$1914
    New ctrl vector for $pmux cell $procmux$625: $procmux$593_CMP
    New ctrl vector for $pmux cell $procmux$636: $auto$opt_reduce.cc:132:opt_mux$1916
    New ctrl vector for $pmux cell $procmux$649: { $procmux$669_CMP $procmux$596_CMP $procmux$655_CMP $procmux$593_CMP }
    New ctrl vector for $pmux cell $procmux$690: $auto$opt_reduce.cc:132:opt_mux$1918
    New ctrl vector for $pmux cell $procmux$694: $auto$opt_reduce.cc:132:opt_mux$1920
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
    New ctrl vector for $pmux cell $procmux$895: { $procmux$897_CMP $procmux$896_CMP }
  Optimizing cells in module \phoeniX.
Performed a total of 41 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
<suppressed ~9 debug messages>
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\phoeniX'.
<suppressed ~6 debug messages>
Removed a total of 7 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1772 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1775 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1778 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1781 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1784 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1787 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1790 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1793 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1796 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1799 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1802 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1805 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1808 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1748 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1811 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1749 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1750 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1814 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1817 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1820 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1756 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1823 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1757 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1826 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1760 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1829 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1832 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1763 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1835 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1766 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1838 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1841 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Removing $procdff$1769 ($dff) from module $paramod\Register_File\WIDTH=32\DEPTH=5.
Replaced 33 DFF cells.

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 0 unused cells and 260 unused wires.
<suppressed ~6 debug messages>

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
    New ctrl vector for $pmux cell $procmux$791: { $procmux$812_CMP $auto$opt_reduce.cc:132:opt_mux$1900 $procmux$803_CMP $procmux$802_CMP $auto$opt_reduce.cc:132:opt_mux$1924 $auto$opt_reduce.cc:132:opt_mux$1922 $auto$opt_reduce.cc:132:opt_mux$1898 $auto$opt_reduce.cc:132:opt_mux$1896 $auto$opt_reduce.cc:132:opt_mux$1894 $auto$opt_reduce.cc:132:opt_mux$1892 $auto$opt_reduce.cc:132:opt_mux$1890 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1921: { $procmux$800_CMP $procmux$810_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1923: { $procmux$801_CMP $procmux$811_CMP }
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1215: { $auto$rtlil.cc:1862:And$1100 $auto$rtlil.cc:1862:And$1112 $auto$rtlil.cc:1862:And$1214 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1178: { $auto$rtlil.cc:1862:And$1100 $auto$rtlil.cc:1862:And$1112 $auto$rtlil.cc:1862:And$1177 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1125: { $auto$rtlil.cc:1862:And$1100 $auto$rtlil.cc:1862:And$1112 $auto$rtlil.cc:1862:And$1124 }
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
Performed a total of 6 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.6.16. Rerunning OPT passes. (Maybe there is more to do..)

3.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

3.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
Performed a total of 0 changes.

3.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.6.20. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.6.23. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$540 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$541 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$542 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$543 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$544 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$545 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$546 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$547 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$548 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$549 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$550 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$551 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$552 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$553 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$554 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$555 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$556 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$557 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$558 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$559 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$560 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$561 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$562 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$563 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$564 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$565 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$566 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$567 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$568 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$569 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$570 (Registers).
Removed top 27 address bits (of 32) from memory write port $paramod\Register_File\WIDTH=32\DEPTH=5.$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$571 (Registers).
Removed cell $paramod\Register_File\WIDTH=32\DEPTH=5.$procmux$842 ($mux).
Removed cell $paramod\Register_File\WIDTH=32\DEPTH=5.$procmux$844 ($mux).
Removed top 31 bits (of 32) from FF cell $paramod\Register_File\WIDTH=32\DEPTH=5.$procdff$1746 ($dff).
Removed top 1 bits (of 7) from port B of cell Address_Generator.$procmux$703_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell Address_Generator.$procmux$702_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell Arithmetic_Logic_Unit.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:830$275 ($mux).
Removed top 31 bits (of 32) from mux cell Arithmetic_Logic_Unit.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:831$277 ($mux).
Removed top 3 bits (of 10) from port B of cell Arithmetic_Logic_Unit.$procmux$793_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell Arithmetic_Logic_Unit.$procmux$792_CMP0 ($eq).
Removed top 7 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$795_CMP0 ($eq).
Removed top 7 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$796_CMP0 ($eq).
Removed top 1 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$797_CMP0 ($eq).
Removed top 7 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$798_CMP0 ($eq).
Removed top 7 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$799_CMP0 ($eq).
Removed top 8 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$800_CMP0 ($eq).
Removed top 8 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$801_CMP0 ($eq).
Removed top 9 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$802_CMP0 ($eq).
Removed top 1 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$803_CMP0 ($eq).
Removed top 11 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$804_CMP0 ($eq).
Removed top 1 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$807_CMP0 ($eq).
Removed top 7 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$808_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell Arithmetic_Logic_Unit.$procmux$810_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell Arithmetic_Logic_Unit.$procmux$811_CMP0 ($eq).
Removed top 9 bits (of 17) from port B of cell Arithmetic_Logic_Unit.$procmux$812_CMP0 ($eq).
Removed top 5 bits (of 10) from port B of cell Arithmetic_Logic_Unit.$procmux$813_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell Arithmetic_Logic_Unit.$procmux$817_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell Arithmetic_Logic_Unit.$procmux$826_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell Arithmetic_Logic_Unit.$procmux$827_CMP0 ($eq).
Removed top 31 bits (of 32) from wire Arithmetic_Logic_Unit.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:830$275_Y.
Removed top 31 bits (of 32) from wire Arithmetic_Logic_Unit.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:831$277_Y.
Removed top 29 bits (of 32) from port B of cell Fetch_Unit.$add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:624$29 ($add).
Removed top 1 bits (of 3) from port B of cell Immediate_Generator.$procmux$850_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell Immediate_Generator.$procmux$851_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell Immediate_Generator.$procmux$852_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:650$34 ($eq).
Removed top 5 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:648$31 ($eq).
Removed top 4 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:649$32 ($eq).
Removed top 2 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:651$36 ($eq).
Removed top 1 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:656$41 ($eq).
Removed top 1 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:659$44 ($eq).
Removed top 1 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:660$45 ($eq).
Removed top 2 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:662$47 ($eq).
Removed top 1 bits (of 7) from port B of cell Instruction_Decoder.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:663$48 ($eq).
Removed top 29 bits (of 32) from mux cell Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$52 ($mux).
Removed top 29 bits (of 32) from mux cell Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$53 ($mux).
Removed top 29 bits (of 32) from mux cell Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$54 ($mux).
Removed top 29 bits (of 32) from mux cell Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$55 ($mux).
Removed top 29 bits (of 32) from mux cell Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$56 ($mux).
Removed top 29 bits (of 32) from mux cell Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$57 ($mux).
Removed top 1 bits (of 3) from port B of cell Instruction_Decoder.$procmux$858_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell Instruction_Decoder.$procmux$859_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell Instruction_Decoder.$procmux$860_CMP0 ($eq).
Removed top 29 bits (of 32) from wire Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$52_Y.
Removed top 29 bits (of 32) from wire Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$53_Y.
Removed top 29 bits (of 32) from wire Instruction_Decoder.$ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$55_Y.
Removed top 2 bits (of 3) from port B of cell Jump_Branch_Unit.$procmux$759_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell Jump_Branch_Unit.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:879$299 ($eq).
Removed top 5 bits (of 10) from port B of cell Load_Store_Unit.$procmux$688_CMP1 ($eq).
Removed top 5 bits (of 10) from port B of cell Load_Store_Unit.$procmux$688_CMP0 ($eq).
Removed top 5 bits (of 10) from port B of cell Load_Store_Unit.$procmux$687_CMP1 ($eq).
Removed top 5 bits (of 10) from port B of cell Load_Store_Unit.$procmux$687_CMP0 ($eq).
Removed top 5 bits (of 10) from port B of cell Load_Store_Unit.$procmux$686_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell Load_Store_Unit.$procmux$685_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell Load_Store_Unit.$procmux$684_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell Load_Store_Unit.$procmux$683_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell Load_Store_Unit.$procmux$663 ($mux).
Removed top 23 bits (of 32) from mux cell Load_Store_Unit.$procmux$665 ($mux).
Removed top 16 bits (of 32) from mux cell Load_Store_Unit.$procmux$653 ($mux).
Removed top 1 bits (of 3) from port B of cell Load_Store_Unit.$procmux$593_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell Load_Store_Unit.$procmux$596_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell Load_Store_Unit.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1038$338 ($eq).
Removed top 5 bits (of 7) from port B of cell Load_Store_Unit.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1032$335 ($eq).
Removed top 3 bits (of 4) from port B of cell Load_Store_Unit.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1036$336 ($eq).
Removed top 2 bits (of 4) from port B of cell Load_Store_Unit.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1037$337 ($eq).
Removed top 2 bits (of 4) from port B of cell Load_Store_Unit.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1052$344 ($eq).
Removed top 1 bits (of 7) from port B of cell Load_Store_Unit.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:1064$348 ($eq).
Removed top 16 bits (of 32) from wire Load_Store_Unit.$procmux$653_Y.
Removed top 24 bits (of 32) from wire Load_Store_Unit.$procmux$663_Y.
Removed top 23 bits (of 32) from wire Load_Store_Unit.$procmux$665_Y.
Removed top 1 bits (of 7) from port B of cell phoeniX.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:540$13 ($eq).
Removed top 5 bits (of 7) from port B of cell phoeniX.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:541$15 ($eq).
Removed top 5 bits (of 7) from port B of cell phoeniX.$eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:580$22 ($eq).
Removed top 1 bits (of 7) from port B of cell phoeniX.$procmux$896_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell phoeniX.$procmux$897_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell phoeniX.$procmux$898_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell phoeniX.$procmux$901_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell phoeniX.$procmux$902_CMP0 ($eq).

3.8. Executing PEEPOPT pass (run peephole optimizers).

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 0 unused cells and 11 unused wires.
<suppressed ~4 debug messages>

3.10. Executing TECHMAP pass (map to technology primitives).

3.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1028 debug messages>

3.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\Register_File\WIDTH=32\DEPTH=5:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Address_Generator:
  creating $macc model for $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:930$311 ($add).
  creating $alu model for $macc $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:930$311.
  creating $alu cell for $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:930$311: $auto$alumacc.cc:474:replace_alu$1933
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Arithmetic_Logic_Unit:
  creating $macc model for $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:828$272 ($add).
  creating $macc model for $sub$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:840$284 ($sub).
  creating $alu model for $macc $sub$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:840$284.
  creating $alu model for $macc $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:828$272.
  creating $alu model for $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:830$274 ($lt): new $alu
  creating $alu model for $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:831$276 ($lt): new $alu
  creating $alu cell for $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:831$276: $auto$alumacc.cc:474:replace_alu$1938
  creating $alu cell for $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:830$274: $auto$alumacc.cc:474:replace_alu$1949
  creating $alu cell for $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:828$272: $auto$alumacc.cc:474:replace_alu$1962
  creating $alu cell for $sub$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:840$284: $auto$alumacc.cc:474:replace_alu$1965
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Fetch_Unit:
  creating $macc model for $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:624$29 ($add).
  creating $alu model for $macc $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:624$29.
  creating $alu cell for $add$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:624$29: $auto$alumacc.cc:474:replace_alu$1968
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Hazard_Forward_Unit:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Immediate_Generator:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Instruction_Decoder:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Jump_Branch_Unit:
  creating $alu model for $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:887$303 ($ge): new $alu
  creating $alu model for $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:891$305 ($ge): new $alu
  creating $alu model for $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:885$302 ($lt): merged with $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:887$303.
  creating $alu model for $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:889$304 ($lt): merged with $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:891$305.
  creating $alu model for $eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:881$300 ($eq): merged with $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:887$303.
  creating $alu model for $ne$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:883$301 ($ne): merged with $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:887$303.
  creating $alu cell for $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:891$305, $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:889$304: $auto$alumacc.cc:474:replace_alu$1973
  creating $alu cell for $ge$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:887$303, $lt$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:885$302, $eq$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:881$300, $ne$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:883$301: $auto$alumacc.cc:474:replace_alu$1986
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Load_Store_Unit:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module phoeniX:
  created 0 $alu and 0 $macc cells.

3.12. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module $paramod\Register_File\WIDTH=32\DEPTH=5 that may be considered for resource sharing.
  Analyzing resource sharing options for $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:768$539 ($memrd):
    Found 1 activation_patterns using ctrl signal \read_enable_2.
    Found 1 candidates: $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:763$537
    Analyzing resource sharing with $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:763$537 ($memrd):
      Found 1 activation_patterns using ctrl signal \read_enable_1.
      Activation pattern for cell $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:768$539: \read_enable_2 = 1'1
      Activation pattern for cell $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:763$537: \read_enable_1 = 1'1
      Size of SAT problem: 0 cells, 9 variables, 19 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \read_enable_2 \read_enable_1 } = 2'11
  Analyzing resource sharing options for $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:763$537 ($memrd):
    Found 1 activation_patterns using ctrl signal \read_enable_1.
    No candidates found.
Found 4 cells in module Arithmetic_Logic_Unit that may be considered for resource sharing.
  Analyzing resource sharing options for $shr$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:845$291 ($shr):
    Found 1 activation_patterns using ctrl signal $auto$opt_reduce.cc:132:opt_mux$1896.
    No candidates found.
  Analyzing resource sharing options for $shr$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:833$279 ($shr):
    Found 1 activation_patterns using ctrl signal $auto$opt_reduce.cc:132:opt_mux$1900.
    No candidates found.
  Analyzing resource sharing options for $shl$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:841$285 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$802_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:829$273 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$812_CMP.
    No candidates found.

3.13. Executing OPT pass (performing simple optimizations).

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
<suppressed ~2 debug messages>
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
<suppressed ~2 debug messages>
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1941: { $auto$alumacc.cc:490:replace_alu$1939 [0] $auto$alumacc.cc:490:replace_alu$1939 [1] $auto$alumacc.cc:490:replace_alu$1939 [2] $auto$alumacc.cc:490:replace_alu$1939 [3] $auto$alumacc.cc:490:replace_alu$1939 [4] $auto$alumacc.cc:490:replace_alu$1939 [5] $auto$alumacc.cc:490:replace_alu$1939 [6] $auto$alumacc.cc:490:replace_alu$1939 [7] $auto$alumacc.cc:490:replace_alu$1939 [8] $auto$alumacc.cc:490:replace_alu$1939 [9] $auto$alumacc.cc:490:replace_alu$1939 [10] $auto$alumacc.cc:490:replace_alu$1939 [11] $auto$alumacc.cc:490:replace_alu$1939 [12] $auto$alumacc.cc:490:replace_alu$1939 [13] $auto$alumacc.cc:490:replace_alu$1939 [14] $auto$alumacc.cc:490:replace_alu$1939 [15] $auto$alumacc.cc:490:replace_alu$1939 [16] $auto$alumacc.cc:490:replace_alu$1939 [17] $auto$alumacc.cc:490:replace_alu$1939 [18] $auto$alumacc.cc:490:replace_alu$1939 [19] $auto$alumacc.cc:490:replace_alu$1939 [20] $auto$alumacc.cc:490:replace_alu$1939 [21] $auto$alumacc.cc:490:replace_alu$1939 [22] $auto$alumacc.cc:490:replace_alu$1939 [23] $auto$alumacc.cc:490:replace_alu$1939 [24] $auto$alumacc.cc:490:replace_alu$1939 [25] $auto$alumacc.cc:490:replace_alu$1939 [26] $auto$alumacc.cc:490:replace_alu$1939 [27] $auto$alumacc.cc:490:replace_alu$1939 [28] $auto$alumacc.cc:490:replace_alu$1939 [29] $auto$alumacc.cc:490:replace_alu$1939 [30] $auto$alumacc.cc:490:replace_alu$1939 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1952: { $auto$alumacc.cc:490:replace_alu$1950 [0] $auto$alumacc.cc:490:replace_alu$1950 [1] $auto$alumacc.cc:490:replace_alu$1950 [2] $auto$alumacc.cc:490:replace_alu$1950 [3] $auto$alumacc.cc:490:replace_alu$1950 [4] $auto$alumacc.cc:490:replace_alu$1950 [5] $auto$alumacc.cc:490:replace_alu$1950 [6] $auto$alumacc.cc:490:replace_alu$1950 [7] $auto$alumacc.cc:490:replace_alu$1950 [8] $auto$alumacc.cc:490:replace_alu$1950 [9] $auto$alumacc.cc:490:replace_alu$1950 [10] $auto$alumacc.cc:490:replace_alu$1950 [11] $auto$alumacc.cc:490:replace_alu$1950 [12] $auto$alumacc.cc:490:replace_alu$1950 [13] $auto$alumacc.cc:490:replace_alu$1950 [14] $auto$alumacc.cc:490:replace_alu$1950 [15] $auto$alumacc.cc:490:replace_alu$1950 [16] $auto$alumacc.cc:490:replace_alu$1950 [17] $auto$alumacc.cc:490:replace_alu$1950 [18] $auto$alumacc.cc:490:replace_alu$1950 [19] $auto$alumacc.cc:490:replace_alu$1950 [20] $auto$alumacc.cc:490:replace_alu$1950 [21] $auto$alumacc.cc:490:replace_alu$1950 [22] $auto$alumacc.cc:490:replace_alu$1950 [23] $auto$alumacc.cc:490:replace_alu$1950 [24] $auto$alumacc.cc:490:replace_alu$1950 [25] $auto$alumacc.cc:490:replace_alu$1950 [26] $auto$alumacc.cc:490:replace_alu$1950 [27] $auto$alumacc.cc:490:replace_alu$1950 [28] $auto$alumacc.cc:490:replace_alu$1950 [29] $auto$alumacc.cc:490:replace_alu$1950 [30] $auto$alumacc.cc:490:replace_alu$1950 [31] }
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1976: { $auto$alumacc.cc:490:replace_alu$1974 [0] $auto$alumacc.cc:490:replace_alu$1974 [1] $auto$alumacc.cc:490:replace_alu$1974 [2] $auto$alumacc.cc:490:replace_alu$1974 [3] $auto$alumacc.cc:490:replace_alu$1974 [4] $auto$alumacc.cc:490:replace_alu$1974 [5] $auto$alumacc.cc:490:replace_alu$1974 [6] $auto$alumacc.cc:490:replace_alu$1974 [7] $auto$alumacc.cc:490:replace_alu$1974 [8] $auto$alumacc.cc:490:replace_alu$1974 [9] $auto$alumacc.cc:490:replace_alu$1974 [10] $auto$alumacc.cc:490:replace_alu$1974 [11] $auto$alumacc.cc:490:replace_alu$1974 [12] $auto$alumacc.cc:490:replace_alu$1974 [13] $auto$alumacc.cc:490:replace_alu$1974 [14] $auto$alumacc.cc:490:replace_alu$1974 [15] $auto$alumacc.cc:490:replace_alu$1974 [16] $auto$alumacc.cc:490:replace_alu$1974 [17] $auto$alumacc.cc:490:replace_alu$1974 [18] $auto$alumacc.cc:490:replace_alu$1974 [19] $auto$alumacc.cc:490:replace_alu$1974 [20] $auto$alumacc.cc:490:replace_alu$1974 [21] $auto$alumacc.cc:490:replace_alu$1974 [22] $auto$alumacc.cc:490:replace_alu$1974 [23] $auto$alumacc.cc:490:replace_alu$1974 [24] $auto$alumacc.cc:490:replace_alu$1974 [25] $auto$alumacc.cc:490:replace_alu$1974 [26] $auto$alumacc.cc:490:replace_alu$1974 [27] $auto$alumacc.cc:490:replace_alu$1974 [28] $auto$alumacc.cc:490:replace_alu$1974 [29] $auto$alumacc.cc:490:replace_alu$1974 [30] $auto$alumacc.cc:490:replace_alu$1974 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1989: { $auto$alumacc.cc:490:replace_alu$1987 [0] $auto$alumacc.cc:490:replace_alu$1987 [1] $auto$alumacc.cc:490:replace_alu$1987 [2] $auto$alumacc.cc:490:replace_alu$1987 [3] $auto$alumacc.cc:490:replace_alu$1987 [4] $auto$alumacc.cc:490:replace_alu$1987 [5] $auto$alumacc.cc:490:replace_alu$1987 [6] $auto$alumacc.cc:490:replace_alu$1987 [7] $auto$alumacc.cc:490:replace_alu$1987 [8] $auto$alumacc.cc:490:replace_alu$1987 [9] $auto$alumacc.cc:490:replace_alu$1987 [10] $auto$alumacc.cc:490:replace_alu$1987 [11] $auto$alumacc.cc:490:replace_alu$1987 [12] $auto$alumacc.cc:490:replace_alu$1987 [13] $auto$alumacc.cc:490:replace_alu$1987 [14] $auto$alumacc.cc:490:replace_alu$1987 [15] $auto$alumacc.cc:490:replace_alu$1987 [16] $auto$alumacc.cc:490:replace_alu$1987 [17] $auto$alumacc.cc:490:replace_alu$1987 [18] $auto$alumacc.cc:490:replace_alu$1987 [19] $auto$alumacc.cc:490:replace_alu$1987 [20] $auto$alumacc.cc:490:replace_alu$1987 [21] $auto$alumacc.cc:490:replace_alu$1987 [22] $auto$alumacc.cc:490:replace_alu$1987 [23] $auto$alumacc.cc:490:replace_alu$1987 [24] $auto$alumacc.cc:490:replace_alu$1987 [25] $auto$alumacc.cc:490:replace_alu$1987 [26] $auto$alumacc.cc:490:replace_alu$1987 [27] $auto$alumacc.cc:490:replace_alu$1987 [28] $auto$alumacc.cc:490:replace_alu$1987 [29] $auto$alumacc.cc:490:replace_alu$1987 [30] $auto$alumacc.cc:490:replace_alu$1987 [31] }
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
Performed a total of 4 changes.

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 3 unused cells and 13 unused wires.
<suppressed ~5 debug messages>

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
Performed a total of 0 changes.

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.13.16. Finished OPT passes. (There is nothing left to do.)

3.14. Executing FSM pass (extract and optimize FSM).

3.14.1. Executing FSM_DETECT pass (finding FSMs in design).

3.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY pass.

3.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$540' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$541' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$542' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$543' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$544' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$545' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$546' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$547' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$548' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$549' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$550' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$551' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$552' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$553' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$554' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$555' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$556' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$557' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$558' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$559' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$560' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$561' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$562' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$563' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$564' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$565' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$566' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$567' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$568' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$569' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$570' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$571' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$572' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': merged $dff to cell.
Checking cell `$memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:763$537' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.
Checking cell `$memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:768$539' in module `$paramod\Register_File\WIDTH=32\DEPTH=5': no (compatible) $dff found.

3.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

3.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory $paramod\Register_File\WIDTH=32\DEPTH=5.Registers by address:
    Port 0 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$540) has addr 5'00000.
      Active bits: 11111111111111111111111111111111
    Port 1 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$541) has addr 5'00001.
      Active bits: 11111111111111111111111111111111
    Port 2 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$542) has addr 5'00010.
      Active bits: 11111111111111111111111111111111
    Port 3 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$543) has addr 5'00011.
      Active bits: 11111111111111111111111111111111
    Port 4 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$544) has addr 5'00100.
      Active bits: 11111111111111111111111111111111
    Port 5 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$545) has addr 5'00101.
      Active bits: 11111111111111111111111111111111
    Port 6 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$546) has addr 5'00110.
      Active bits: 11111111111111111111111111111111
    Port 7 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$547) has addr 5'00111.
      Active bits: 11111111111111111111111111111111
    Port 8 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$548) has addr 5'01000.
      Active bits: 11111111111111111111111111111111
    Port 9 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$549) has addr 5'01001.
      Active bits: 11111111111111111111111111111111
    Port 10 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$550) has addr 5'01010.
      Active bits: 11111111111111111111111111111111
    Port 11 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$551) has addr 5'01011.
      Active bits: 11111111111111111111111111111111
    Port 12 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$552) has addr 5'01100.
      Active bits: 11111111111111111111111111111111
    Port 13 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$553) has addr 5'01101.
      Active bits: 11111111111111111111111111111111
    Port 14 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$554) has addr 5'01110.
      Active bits: 11111111111111111111111111111111
    Port 15 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$555) has addr 5'01111.
      Active bits: 11111111111111111111111111111111
    Port 16 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$556) has addr 5'10000.
      Active bits: 11111111111111111111111111111111
    Port 17 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$557) has addr 5'10001.
      Active bits: 11111111111111111111111111111111
    Port 18 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$558) has addr 5'10010.
      Active bits: 11111111111111111111111111111111
    Port 19 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$559) has addr 5'10011.
      Active bits: 11111111111111111111111111111111
    Port 20 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$560) has addr 5'10100.
      Active bits: 11111111111111111111111111111111
    Port 21 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$561) has addr 5'10101.
      Active bits: 11111111111111111111111111111111
    Port 22 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$562) has addr 5'10110.
      Active bits: 11111111111111111111111111111111
    Port 23 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$563) has addr 5'10111.
      Active bits: 11111111111111111111111111111111
    Port 24 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$564) has addr 5'11000.
      Active bits: 11111111111111111111111111111111
    Port 25 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$565) has addr 5'11001.
      Active bits: 11111111111111111111111111111111
    Port 26 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$566) has addr 5'11010.
      Active bits: 11111111111111111111111111111111
    Port 27 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$567) has addr 5'11011.
      Active bits: 11111111111111111111111111111111
    Port 28 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$568) has addr 5'11100.
      Active bits: 11111111111111111111111111111111
    Port 29 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$569) has addr 5'11101.
      Active bits: 11111111111111111111111111111111
    Port 30 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$570) has addr 5'11110.
      Active bits: 11111111111111111111111111111111
    Port 31 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$571) has addr 5'11111.
      Active bits: 11111111111111111111111111111111
  New clock domain: negedge \CLK
    Port 32 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$572) has addr \write_index.
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory $paramod\Register_File\WIDTH=32\DEPTH=5.Registers using sat-based resource sharing:
  Port 0 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$540) unclocked: not considered
  Port 1 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$541) unclocked: not considered
  Port 2 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$542) unclocked: not considered
  Port 3 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$543) unclocked: not considered
  Port 4 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$544) unclocked: not considered
  Port 5 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$545) unclocked: not considered
  Port 6 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$546) unclocked: not considered
  Port 7 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$547) unclocked: not considered
  Port 8 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$548) unclocked: not considered
  Port 9 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$549) unclocked: not considered
  Port 10 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$550) unclocked: not considered
  Port 11 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$551) unclocked: not considered
  Port 12 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$552) unclocked: not considered
  Port 13 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$553) unclocked: not considered
  Port 14 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$554) unclocked: not considered
  Port 15 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$555) unclocked: not considered
  Port 16 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$556) unclocked: not considered
  Port 17 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$557) unclocked: not considered
  Port 18 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$558) unclocked: not considered
  Port 19 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$559) unclocked: not considered
  Port 20 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$560) unclocked: not considered
  Port 21 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$561) unclocked: not considered
  Port 22 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$562) unclocked: not considered
  Port 23 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$563) unclocked: not considered
  Port 24 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$564) unclocked: not considered
  Port 25 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$565) unclocked: not considered
  Port 26 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$566) unclocked: not considered
  Port 27 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$567) unclocked: not considered
  Port 28 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$568) unclocked: not considered
  Port 29 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$569) unclocked: not considered
  Port 30 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$570) unclocked: not considered
  Port 31 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$571) unclocked: not considered
  Port 32 ($memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$572) on negedge \CLK: considered
  No two subsequent ports in same clock domain considered -> nothing to consolidate.

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\Registers' in module `$paramod\Register_File\WIDTH=32\DEPTH=5':
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$540 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$541 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$542 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$543 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$544 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$545 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$546 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$547 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$548 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$549 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$550 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$551 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$552 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$553 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$554 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$555 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$556 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$557 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$558 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$559 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$560 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$561 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$562 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$563 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$564 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$565 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$566 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$567 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$568 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$569 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$570 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:749$571 ($memwr)
  $memwr$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:756$572 ($memwr)
  $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:768$539 ($memrd)
  $memrd$\Registers$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:763$537 ($memrd)

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.18. Executing OPT pass (performing simple optimizations).

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
<suppressed ~3 debug messages>
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
<suppressed ~5 debug messages>
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
<suppressed ~4 debug messages>
Optimizing module Immediate_Generator.
<suppressed ~1 debug messages>
Optimizing module Instruction_Decoder.
<suppressed ~3 debug messages>
Optimizing module Jump_Branch_Unit.
<suppressed ~3 debug messages>
Optimizing module Load_Store_Unit.
<suppressed ~2 debug messages>
Optimizing module phoeniX.
<suppressed ~2 debug messages>

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 3 unused cells and 14 unused wires.
<suppressed ~11 debug messages>

3.18.5. Finished fast OPT passes.

3.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \Registers in module $paramod\Register_File\WIDTH=32\DEPTH=5:
  created 0 $dff cells and 32 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 0 write mux blocks.

3.20. Executing OPT pass (performing simple optimizations).

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
<suppressed ~62 debug messages>
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
    Consolidated identical input bits for $pmux cell $procmux$847:
      Old ports: A={ \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31:20] }, B={ \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31:25] \instruction [11:7] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [7] \instruction [30:25] \instruction [11:8] 1'0 \instruction [31:12] 12'000000000000 \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [19:12] \instruction [20] \instruction [30:21] 1'0 }, Y=\immediate
      New ports: A={ \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31:20] }, B={ \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31:25] \instruction [11:7] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [7] \instruction [30:25] \instruction [11:8] 1'0 \instruction [30:12] 12'000000000000 \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [31] \instruction [19:12] \instruction [20] \instruction [30:21] 1'0 }, Y=\immediate [30:0]
      New connections: \immediate [31] = \instruction [31]
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
    Consolidated identical input bits for $mux cell $ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$52:
      Old ports: A=3'00z, B=3'101, Y=$auto$wreduce.cc:455:run$1927 [2:0]
      New ports: A=2'0z, B=2'11, Y={ $auto$wreduce.cc:455:run$1927 [2] $auto$wreduce.cc:455:run$1927 [0] }
      New connections: $auto$wreduce.cc:455:run$1927 [1] = 1'0
  Optimizing cells in module \Instruction_Decoder.
    Consolidated identical input bits for $mux cell $ternary$/home/arvin/Desktop/QFlow_test/phoeniX/source/phoeniX.v:673$53:
      Old ports: A=$auto$wreduce.cc:455:run$1927 [2:0], B=3'100, Y=$auto$wreduce.cc:455:run$1928 [2:0]
      New ports: A={ $auto$wreduce.cc:455:run$1927 [2] $auto$wreduce.cc:455:run$1927 [0] }, B=2'10, Y={ $auto$wreduce.cc:455:run$1928 [2] $auto$wreduce.cc:455:run$1928 [0] }
      New connections: $auto$wreduce.cc:455:run$1928 [1] = 1'0
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
    Consolidated identical input bits for $mux cell $procmux$658:
      Old ports: A={ \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31:16] }, B={ \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15:0] }, Y=$procmux$658_Y
      New ports: A=\memory_interface_data [31:16], B=\memory_interface_data [15:0], Y=$procmux$658_Y [15:0]
      New connections: $procmux$658_Y [31:16] = { $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] $procmux$658_Y [15] }
    Consolidated identical input bits for $mux cell $procmux$667:
      Old ports: A={ 23'00000000000000000000000 $auto$wreduce.cc:455:run$1932 [8:0] }, B={ 24'000000000000000000000000 \memory_interface_data [7:0] }, Y=$procmux$667_Y
      New ports: A=$auto$wreduce.cc:455:run$1932 [8:0], B={ 1'0 \memory_interface_data [7:0] }, Y=$procmux$667_Y [8:0]
      New connections: $procmux$667_Y [31:9] = 23'00000000000000000000000
    Consolidated identical input bits for $mux cell $procmux$672:
      Old ports: A={ \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31] \memory_interface_data [31:24] }, B={ \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23] \memory_interface_data [23:16] }, Y=$procmux$672_Y
      New ports: A=\memory_interface_data [31:24], B=\memory_interface_data [23:16], Y=$procmux$672_Y [7:0]
      New connections: $procmux$672_Y [31:8] = { $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] $procmux$672_Y [7] }
  Optimizing cells in module \Load_Store_Unit.
    Consolidated identical input bits for $mux cell $procmux$674:
      Old ports: A=$procmux$672_Y, B={ \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15] \memory_interface_data [15:7] }, Y=$procmux$674_Y
      New ports: A={ $procmux$672_Y [7] $procmux$672_Y [7:0] }, B=\memory_interface_data [15:7], Y=$procmux$674_Y [8:0]
      New connections: $procmux$674_Y [31:9] = { $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] $procmux$674_Y [8] }
  Optimizing cells in module \Load_Store_Unit.
    Consolidated identical input bits for $mux cell $procmux$676:
      Old ports: A=$procmux$674_Y, B={ \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7] \memory_interface_data [7:0] }, Y=$procmux$676_Y
      New ports: A=$procmux$674_Y [8:0], B={ \memory_interface_data [7] \memory_interface_data [7:0] }, Y=$procmux$676_Y [8:0]
      New connections: $procmux$676_Y [31:9] = { $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] $procmux$676_Y [8] }
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
Performed a total of 8 changes.

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\phoeniX'.
Removed a total of 2 cells.

3.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 2 unused cells and 128 unused wires.
<suppressed ~4 debug messages>

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
Performed a total of 0 changes.

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

3.20.16. Finished OPT passes. (There is nothing left to do.)

3.21. Executing TECHMAP pass (map to technology primitives).

3.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_pmux\WIDTH=31\S_WIDTH=4 for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:b9a86d073741c2a0f7bb241e73c2dd11747f3288$paramod$8c0dd5ff1d42c73e7701ae7a633831fc809160d1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:b9a86d073741c2a0f7bb241e73c2dd11747f3288$paramod$5be353ef5531baf885e010532ba16fbb2d5d1d8e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~3715 debug messages>

3.22. Executing OPT pass (performing simple optimizations).

3.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
<suppressed ~51 debug messages>
Optimizing module Arithmetic_Logic_Unit.
<suppressed ~528 debug messages>
Optimizing module Fetch_Unit.
<suppressed ~186 debug messages>
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
<suppressed ~34 debug messages>
Optimizing module Instruction_Decoder.
<suppressed ~61 debug messages>
Optimizing module Jump_Branch_Unit.
<suppressed ~78 debug messages>
Optimizing module Load_Store_Unit.
<suppressed ~261 debug messages>
Optimizing module phoeniX.
<suppressed ~141 debug messages>

3.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
<suppressed ~81 debug messages>
Finding identical cells in module `\Arithmetic_Logic_Unit'.
<suppressed ~2376 debug messages>
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
<suppressed ~204 debug messages>
Finding identical cells in module `\Instruction_Decoder'.
<suppressed ~294 debug messages>
Finding identical cells in module `\Jump_Branch_Unit'.
<suppressed ~1026 debug messages>
Finding identical cells in module `\Load_Store_Unit'.
<suppressed ~390 debug messages>
Finding identical cells in module `\phoeniX'.
<suppressed ~135 debug messages>
Removed a total of 1502 cells.

3.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 281 unused cells and 1706 unused wires.
<suppressed ~290 debug messages>

3.22.5. Finished fast OPT passes.

3.23. Executing ABC pass (technology mapping using ABC).

3.23.1. Extracting gate netlist of module `$paramod\Register_File\WIDTH=32\DEPTH=5' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.23.2. Extracting gate netlist of module `\Address_Generator' to `<abc-temp-dir>/input.blif'..
Extracted 380 gates and 486 wires to a netlist network with 103 inputs and 32 outputs.

3.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:       23
ABC RESULTS:              AOI3 cells:       23
ABC RESULTS:              AOI4 cells:       24
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:       46
ABC RESULTS:              OAI3 cells:       23
ABC RESULTS:              OAI4 cells:        9
ABC RESULTS:                OR cells:       26
ABC RESULTS:             ORNOT cells:       19
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:       57
ABC RESULTS:        internal signals:      351
ABC RESULTS:           input signals:      103
ABC RESULTS:          output signals:       32
Removing temp directory.

3.23.3. Extracting gate netlist of module `\Arithmetic_Logic_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 2242 gates and 2424 wires to a netlist network with 180 inputs and 69 outputs.

3.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:      232
ABC RESULTS:              AOI3 cells:       55
ABC RESULTS:              AOI4 cells:        5
ABC RESULTS:               MUX cells:      612
ABC RESULTS:              NAND cells:       60
ABC RESULTS:               NOR cells:       56
ABC RESULTS:               NOT cells:      118
ABC RESULTS:              OAI3 cells:       61
ABC RESULTS:              OAI4 cells:      130
ABC RESULTS:                OR cells:      340
ABC RESULTS:             ORNOT cells:       65
ABC RESULTS:              XNOR cells:       18
ABC RESULTS:               XOR cells:       47
ABC RESULTS:        internal signals:     2175
ABC RESULTS:           input signals:      180
ABC RESULTS:          output signals:       69
Removing temp directory.

3.23.4. Extracting gate netlist of module `\Fetch_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 111 gates and 177 wires to a netlist network with 65 inputs and 32 outputs.

3.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               MUX cells:       32
ABC RESULTS:              NAND cells:       14
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       18
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:       12
ABC RESULTS:               XOR cells:       17
ABC RESULTS:        internal signals:       80
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       32
Removing temp directory.

3.23.5. Extracting gate netlist of module `\Hazard_Forward_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 99 gates and 218 wires to a netlist network with 119 inputs and 33 outputs.

3.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.5.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               MUX cells:       64
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:       12
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:       15
ABC RESULTS:        internal signals:       66
ABC RESULTS:           input signals:      119
ABC RESULTS:          output signals:       33
Removing temp directory.

3.23.6. Extracting gate netlist of module `\Immediate_Generator' to `<abc-temp-dir>/input.blif'..
Extracted 173 gates and 202 wires to a netlist network with 28 inputs and 31 outputs.

3.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:              AOI3 cells:        9
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:       31
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:       21
ABC RESULTS:              OAI3 cells:       21
ABC RESULTS:              OAI4 cells:       11
ABC RESULTS:                OR cells:       25
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:      143
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       31
Removing temp directory.

3.23.7. Extracting gate netlist of module `\Instruction_Decoder' to `<abc-temp-dir>/input.blif'..
Extracted 110 gates and 125 wires to a netlist network with 12 inputs and 8 outputs.

3.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:              AOI3 cells:        7
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              OAI3 cells:        4
ABC RESULTS:                OR cells:       20
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:        internal signals:      105
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        8
Removing temp directory.

3.23.8. Extracting gate netlist of module `\Jump_Branch_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 287 gates and 366 wires to a netlist network with 78 inputs and 3 outputs.

3.23.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.8.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       35
ABC RESULTS:              AOI3 cells:       22
ABC RESULTS:              NAND cells:       20
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              OAI3 cells:       11
ABC RESULTS:              OAI4 cells:        3
ABC RESULTS:                OR cells:       24
ABC RESULTS:             ORNOT cells:       12
ABC RESULTS:              XNOR cells:       28
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:      285
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:        3
Removing temp directory.

3.23.9. Extracting gate netlist of module `\Load_Store_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 439 gates and 517 wires to a netlist network with 76 inputs and 69 outputs.

3.23.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:            ANDNOT cells:       30
ABC RESULTS:              AOI3 cells:       20
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      101
ABC RESULTS:              NAND cells:       32
ABC RESULTS:               NOR cells:       19
ABC RESULTS:               NOT cells:       39
ABC RESULTS:              OAI3 cells:       31
ABC RESULTS:              OAI4 cells:       16
ABC RESULTS:                OR cells:       38
ABC RESULTS:             ORNOT cells:       25
ABC RESULTS:        internal signals:      372
ABC RESULTS:           input signals:       76
ABC RESULTS:          output signals:       69
Removing temp directory.

3.23.10. Extracting gate netlist of module `\phoeniX' to `<abc-temp-dir>/input.blif'..
Extracted 497 gates and 1044 wires to a netlist network with 545 inputs and 282 outputs.

3.23.10.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       62
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      230
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:       67
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:              OAI4 cells:       32
ABC RESULTS:                OR cells:       52
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:      217
ABC RESULTS:           input signals:      545
ABC RESULTS:          output signals:      282
Removing temp directory.

3.24. Executing OPT pass (performing simple optimizations).

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
<suppressed ~258 debug messages>
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
<suppressed ~2 debug messages>
Optimizing module phoeniX.
<suppressed ~32 debug messages>

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

3.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..
Removed 1 unused cells and 2918 unused wires.
<suppressed ~20 debug messages>

3.24.5. Finished fast OPT passes.

3.25. Executing HIERARCHY pass (managing design hierarchy).

3.25.1. Analyzing design hierarchy..
Top module:  \phoeniX
Used module:     \Instruction_Decoder
Used module:     \Address_Generator
Used module:     \Arithmetic_Logic_Unit
Used module:     \Fetch_Unit
Used module:     \Hazard_Forward_Unit
Used module:     \Immediate_Generator
Used module:     \Jump_Branch_Unit
Used module:     \Load_Store_Unit
Used module:     $paramod\Register_File\WIDTH=32\DEPTH=5

3.25.2. Analyzing design hierarchy..
Top module:  \phoeniX
Used module:     \Instruction_Decoder
Used module:     \Address_Generator
Used module:     \Arithmetic_Logic_Unit
Used module:     \Fetch_Unit
Used module:     \Hazard_Forward_Unit
Used module:     \Immediate_Generator
Used module:     \Jump_Branch_Unit
Used module:     \Load_Store_Unit
Used module:     $paramod\Register_File\WIDTH=32\DEPTH=5
Removed 0 unused modules.

3.26. Printing statistics.

=== $paramod\Register_File\WIDTH=32\DEPTH=5 ===

   Number of wires:                 11
   Number of wire bits:            116
   Number of public wires:          11
   Number of public wire bits:     116
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== Address_Generator ===

   Number of wires:                251
   Number of wire bits:            381
   Number of public wires:           5
   Number of public wire bits:     135
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                278
     $_ANDNOT_                      23
     $_AND_                          6
     $_AOI3_                        23
     $_AOI4_                        24
     $_NAND_                        10
     $_NOR_                          6
     $_NOT_                         46
     $_OAI3_                        23
     $_OAI4_                         9
     $_ORNOT_                       19
     $_OR_                          26
     $_XNOR_                         6
     $_XOR_                         57

=== Arithmetic_Logic_Unit ===

   Number of wires:               1756
   Number of wire bits:           1989
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1844
     $_ANDNOT_                     232
     $_AND_                         10
     $_AOI3_                        55
     $_AOI4_                         5
     $_DLATCH_P_                    35
     $_MUX_                        612
     $_NAND_                        60
     $_NOR_                         56
     $_NOT_                        118
     $_OAI3_                        61
     $_OAI4_                       130
     $_ORNOT_                       65
     $_OR_                         340
     $_XNOR_                        18
     $_XOR_                         47

=== Fetch_Unit ===

   Number of wires:                 88
   Number of wire bits:            215
   Number of public wires:           9
   Number of public wire bits:     136
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                111
     $_ANDNOT_                      12
     $_AND_                          2
     $_MUX_                         32
     $_NAND_                        14
     $_NOR_                          2
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                          18
     $_XNOR_                        12
     $_XOR_                         17

=== Hazard_Forward_Unit ===

   Number of wires:                 75
   Number of wire bits:            215
   Number of public wires:          12
   Number of public wire bits:     152
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $_ANDNOT_                       2
     $_MUX_                         64
     $_NAND_                         1
     $_NOR_                          1
     $_ORNOT_                        1
     $_OR_                          12
     $_XOR_                         15

=== Immediate_Generator ===

   Number of wires:                 99
   Number of wire bits:            163
   Number of public wires:           3
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                127
     $_ANDNOT_                       4
     $_AND_                          1
     $_AOI3_                         9
     $_AOI4_                         1
     $_MUX_                         31
     $_NAND_                         1
     $_NOT_                         21
     $_OAI3_                        21
     $_OAI4_                        11
     $_ORNOT_                        2
     $_OR_                          25

=== Instruction_Decoder ===

   Number of wires:                 72
   Number of wire bits:            142
   Number of public wires:          12
   Number of public wire bits:      82
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 66
     $_ANDNOT_                       8
     $_AND_                          1
     $_AOI3_                         7
     $_DLATCH_P_                     3
     $_MUX_                          1
     $_NAND_                         3
     $_NOR_                          9
     $_NOT_                          2
     $_OAI3_                         4
     $_ORNOT_                        8
     $_OR_                          20

=== Jump_Branch_Unit ===

   Number of wires:                177
   Number of wire bits:            249
   Number of public wires:           7
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                172
     $_ANDNOT_                      35
     $_AOI3_                        22
     $_DLATCH_P_                     1
     $_NAND_                        20
     $_NOR_                          9
     $_NOT_                          2
     $_OAI3_                        11
     $_OAI4_                         3
     $_ORNOT_                       12
     $_OR_                          24
     $_XNOR_                        28
     $_XOR_                          5

=== Load_Store_Unit ===

   Number of wires:                306
   Number of wire bits:            565
   Number of public wires:          11
   Number of public wire bits:     208
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                420
     $_ANDNOT_                      30
     $_AND_                          3
     $_AOI3_                        20
     $_AOI4_                         2
     $_DLATCH_P_                    64
     $_MUX_                        101
     $_NAND_                        32
     $_NOR_                         19
     $_NOT_                         39
     $_OAI3_                        31
     $_OAI4_                        16
     $_ORNOT_                       25
     $_OR_                          38

=== phoeniX ===

   Number of wires:                334
   Number of wire bits:           1555
   Number of public wires:          70
   Number of public wire bits:    1184
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1018
     $_ANDNOT_                      62
     $_AND_                          1
     $_AOI3_                         1
     $_AOI4_                         2
     $_DFF_P_                      503
     $_DLATCH_P_                    32
     $_MUX_                        230
     $_NAND_                         8
     $_NOR_                          3
     $_NOT_                         66
     $_OAI3_                         1
     $_OAI4_                        32
     $_ORNOT_                        5
     $_OR_                          52
     $_XNOR_                         4
     $_XOR_                          6
     $paramod\Register_File\WIDTH=32\DEPTH=5      1
     Address_Generator               1
     Arithmetic_Logic_Unit           1
     Fetch_Unit                      1
     Hazard_Forward_Unit             2
     Immediate_Generator             1
     Instruction_Decoder             1
     Jump_Branch_Unit                1
     Load_Store_Unit                 1

=== design hierarchy ===

   phoeniX                           1
     $paramod\Register_File\WIDTH=32\DEPTH=5      1
     Address_Generator               1
     Arithmetic_Logic_Unit           1
     Fetch_Unit                      1
     Hazard_Forward_Unit             2
     Immediate_Generator             1
     Instruction_Decoder             1
     Jump_Branch_Unit                1
     Load_Store_Unit                 1

   Number of wires:               3244
   Number of wire bits:           5805
   Number of public wires:         163
   Number of public wire bits:    2523
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4218
     $_ANDNOT_                     410
     $_AND_                         24
     $_AOI3_                       137
     $_AOI4_                        34
     $_DFF_P_                      503
     $_DLATCH_P_                   135
     $_MUX_                       1135
     $_NAND_                       150
     $_NOR_                        106
     $_NOT_                        295
     $_OAI3_                       152
     $_OAI4_                       201
     $_ORNOT_                      139
     $_OR_                         567
     $_XNOR_                        68
     $_XOR_                        162

3.27. Executing CHECK pass (checking for obvious problems).
checking module $paramod\Register_File\WIDTH=32\DEPTH=5..
checking module Address_Generator..
checking module Arithmetic_Logic_Unit..
checking module Fetch_Unit..
checking module Hazard_Forward_Unit..
checking module Immediate_Generator..
checking module Instruction_Decoder..
checking module Jump_Branch_Unit..
checking module Load_Store_Unit..
checking module phoeniX..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=176.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5':
Mapping DFF cells in module `\Address_Generator':
Mapping DFF cells in module `\Arithmetic_Logic_Unit':
Mapping DFF cells in module `\Fetch_Unit':
Mapping DFF cells in module `\Hazard_Forward_Unit':
Mapping DFF cells in module `\Immediate_Generator':
Mapping DFF cells in module `\Instruction_Decoder':
Mapping DFF cells in module `\Jump_Branch_Unit':
Mapping DFF cells in module `\Load_Store_Unit':
Mapping DFF cells in module `\phoeniX':
  mapped 503 $_DFF_P_ cells to \DFFPOSX1 cells.

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\Register_File\WIDTH=32\DEPTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Address_Generator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Arithmetic_Logic_Unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch_Unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Hazard_Forward_Unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Immediate_Generator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Instruction_Decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Jump_Branch_Unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Load_Store_Unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\Register_File\WIDTH=32\DEPTH=5.
  Optimizing cells in module \Address_Generator.
  Optimizing cells in module \Arithmetic_Logic_Unit.
  Optimizing cells in module \Fetch_Unit.
  Optimizing cells in module \Hazard_Forward_Unit.
  Optimizing cells in module \Immediate_Generator.
  Optimizing cells in module \Instruction_Decoder.
  Optimizing cells in module \Jump_Branch_Unit.
  Optimizing cells in module \Load_Store_Unit.
  Optimizing cells in module \phoeniX.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\Register_File\WIDTH=32\DEPTH=5'.
Finding identical cells in module `\Address_Generator'.
Finding identical cells in module `\Arithmetic_Logic_Unit'.
Finding identical cells in module `\Fetch_Unit'.
Finding identical cells in module `\Hazard_Forward_Unit'.
Finding identical cells in module `\Immediate_Generator'.
Finding identical cells in module `\Instruction_Decoder'.
Finding identical cells in module `\Jump_Branch_Unit'.
Finding identical cells in module `\Load_Store_Unit'.
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\Register_File\WIDTH=32\DEPTH=5..
Finding unused cells or wires in module \Address_Generator..
Finding unused cells or wires in module \Arithmetic_Logic_Unit..
Finding unused cells or wires in module \Fetch_Unit..
Finding unused cells or wires in module \Hazard_Forward_Unit..
Finding unused cells or wires in module \Immediate_Generator..
Finding unused cells or wires in module \Instruction_Decoder..
Finding unused cells or wires in module \Jump_Branch_Unit..
Finding unused cells or wires in module \Load_Store_Unit..
Finding unused cells or wires in module \phoeniX..

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\Register_File\WIDTH=32\DEPTH=5.
Optimizing module Address_Generator.
Optimizing module Arithmetic_Logic_Unit.
Optimizing module Fetch_Unit.
Optimizing module Hazard_Forward_Unit.
Optimizing module Immediate_Generator.
Optimizing module Instruction_Decoder.
Optimizing module Jump_Branch_Unit.
Optimizing module Load_Store_Unit.
Optimizing module phoeniX.

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `$paramod\Register_File\WIDTH=32\DEPTH=5' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.2. Extracting gate netlist of module `\Address_Generator' to `<abc-temp-dir>/input.blif'..
Extracted 278 gates and 381 wires to a netlist network with 103 inputs and 32 outputs.

6.2.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       11
ABC RESULTS:           AOI21X1 cells:       33
ABC RESULTS:           AOI22X1 cells:       27
ABC RESULTS:             INVX1 cells:       82
ABC RESULTS:           NAND2X1 cells:       78
ABC RESULTS:           NAND3X1 cells:       13
ABC RESULTS:            NOR2X1 cells:       46
ABC RESULTS:            NOR3X1 cells:        9
ABC RESULTS:           OAI21X1 cells:       54
ABC RESULTS:             OR2X2 cells:        6
ABC RESULTS:           XNOR2X1 cells:       44
ABC RESULTS:            XOR2X1 cells:        5
ABC RESULTS:        internal signals:      246
ABC RESULTS:           input signals:      103
ABC RESULTS:          output signals:       32
Removing temp directory.

6.3. Extracting gate netlist of module `\Arithmetic_Logic_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 1809 gates and 1989 wires to a netlist network with 180 inputs and 69 outputs.

6.3.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       55
ABC RESULTS:           AOI21X1 cells:      178
ABC RESULTS:           AOI22X1 cells:       41
ABC RESULTS:             INVX1 cells:      242
ABC RESULTS:            MUX2X1 cells:       56
ABC RESULTS:           NAND2X1 cells:      445
ABC RESULTS:           NAND3X1 cells:       91
ABC RESULTS:            NOR2X1 cells:      310
ABC RESULTS:            NOR3X1 cells:        9
ABC RESULTS:           OAI21X1 cells:      534
ABC RESULTS:           OAI22X1 cells:       38
ABC RESULTS:             OR2X2 cells:       30
ABC RESULTS:           XNOR2X1 cells:        1
ABC RESULTS:        internal signals:     1740
ABC RESULTS:           input signals:      180
ABC RESULTS:          output signals:       69
Removing temp directory.

6.4. Extracting gate netlist of module `\Fetch_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 111 gates and 176 wires to a netlist network with 65 inputs and 32 outputs.

6.4.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        4
ABC RESULTS:           AOI21X1 cells:        7
ABC RESULTS:             INVX1 cells:       29
ABC RESULTS:           NAND2X1 cells:       58
ABC RESULTS:           NAND3X1 cells:        7
ABC RESULTS:            NOR2X1 cells:       19
ABC RESULTS:            NOR3X1 cells:        4
ABC RESULTS:           OAI21X1 cells:       54
ABC RESULTS:             OR2X2 cells:        4
ABC RESULTS:           XNOR2X1 cells:        4
ABC RESULTS:            XOR2X1 cells:        2
ABC RESULTS:        internal signals:       79
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       32
Removing temp directory.

6.5. Extracting gate netlist of module `\Hazard_Forward_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 96 gates and 215 wires to a netlist network with 119 inputs and 33 outputs.

6.5.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.5.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:           AOI21X1 cells:        4
ABC RESULTS:           AOI22X1 cells:        2
ABC RESULTS:             INVX1 cells:       76
ABC RESULTS:           NAND2X1 cells:      110
ABC RESULTS:           NAND3X1 cells:       70
ABC RESULTS:            NOR2X1 cells:        6
ABC RESULTS:           OAI21X1 cells:        4
ABC RESULTS:           OAI22X1 cells:        2
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:            XOR2X1 cells:        4
ABC RESULTS:        internal signals:       63
ABC RESULTS:           input signals:      119
ABC RESULTS:          output signals:       33
Removing temp directory.

6.6. Extracting gate netlist of module `\Immediate_Generator' to `<abc-temp-dir>/input.blif'..
Extracted 127 gates and 155 wires to a netlist network with 28 inputs and 31 outputs.

6.6.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.6.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:        2
ABC RESULTS:           AOI22X1 cells:       12
ABC RESULTS:             INVX1 cells:       24
ABC RESULTS:           NAND2X1 cells:       10
ABC RESULTS:           NAND3X1 cells:        2
ABC RESULTS:            NOR2X1 cells:        8
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:       25
ABC RESULTS:           OAI22X1 cells:        1
ABC RESULTS:        internal signals:       96
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       31
Removing temp directory.

6.7. Extracting gate netlist of module `\Instruction_Decoder' to `<abc-temp-dir>/input.blif'..
Extracted 63 gates and 75 wires to a netlist network with 12 inputs and 8 outputs.

6.7.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.7.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:           AOI21X1 cells:        2
ABC RESULTS:           AOI22X1 cells:        2
ABC RESULTS:             INVX1 cells:        7
ABC RESULTS:           NAND2X1 cells:        8
ABC RESULTS:           NAND3X1 cells:        1
ABC RESULTS:            NOR2X1 cells:       10
ABC RESULTS:           OAI21X1 cells:        2
ABC RESULTS:           OAI22X1 cells:        1
ABC RESULTS:             OR2X2 cells:        4
ABC RESULTS:          _const1_ cells:        2
ABC RESULTS:        internal signals:       55
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        8
Removing temp directory.

6.8. Extracting gate netlist of module `\Jump_Branch_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 171 gates and 249 wires to a netlist network with 78 inputs and 3 outputs.

6.8.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.8.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       17
ABC RESULTS:           AOI21X1 cells:       24
ABC RESULTS:           AOI22X1 cells:       11
ABC RESULTS:             INVX1 cells:       60
ABC RESULTS:           NAND2X1 cells:       67
ABC RESULTS:           NAND3X1 cells:       16
ABC RESULTS:            NOR2X1 cells:       47
ABC RESULTS:            NOR3X1 cells:        3
ABC RESULTS:           OAI21X1 cells:       40
ABC RESULTS:           OAI22X1 cells:        3
ABC RESULTS:             OR2X2 cells:       16
ABC RESULTS:           XNOR2X1 cells:        2
ABC RESULTS:        internal signals:      168
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:        3
Removing temp directory.

6.9. Extracting gate netlist of module `\Load_Store_Unit' to `<abc-temp-dir>/input.blif'..
Extracted 356 gates and 432 wires to a netlist network with 76 inputs and 69 outputs.

6.9.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.9.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        4
ABC RESULTS:           AOI21X1 cells:       16
ABC RESULTS:           AOI22X1 cells:       35
ABC RESULTS:             INVX1 cells:       58
ABC RESULTS:           NAND2X1 cells:       36
ABC RESULTS:           NAND3X1 cells:       19
ABC RESULTS:            NOR2X1 cells:       23
ABC RESULTS:            NOR3X1 cells:        9
ABC RESULTS:           OAI21X1 cells:      128
ABC RESULTS:           OAI22X1 cells:        8
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:        internal signals:      287
ABC RESULTS:           input signals:       76
ABC RESULTS:          output signals:       69
Removing temp directory.

6.10. Extracting gate netlist of module `\phoeniX' to `<abc-temp-dir>/input.blif'..
Extracted 473 gates and 1018 wires to a netlist network with 545 inputs and 282 outputs.

6.10.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.10.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        8
ABC RESULTS:           AOI21X1 cells:        5
ABC RESULTS:           AOI22X1 cells:       40
ABC RESULTS:             INVX1 cells:      265
ABC RESULTS:           NAND2X1 cells:      110
ABC RESULTS:           NAND3X1 cells:       73
ABC RESULTS:            NOR2X1 cells:       16
ABC RESULTS:            NOR3X1 cells:       46
ABC RESULTS:           OAI21X1 cells:      259
ABC RESULTS:           OAI22X1 cells:        5
ABC RESULTS:             OR2X2 cells:        4
ABC RESULTS:           XNOR2X1 cells:        4
ABC RESULTS:            XOR2X1 cells:        2
ABC RESULTS:        internal signals:      191
ABC RESULTS:           input signals:      545
ABC RESULTS:          output signals:      282
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
Using template Instruction_Decoder for cells of type Instruction_Decoder.
Using template Immediate_Generator for cells of type Immediate_Generator.
Using template $paramod\Register_File\WIDTH=32\DEPTH=5 for cells of type $paramod\Register_File\WIDTH=32\DEPTH=5.
Using template Address_Generator for cells of type Address_Generator.
Using template Load_Store_Unit for cells of type Load_Store_Unit.
Using template Hazard_Forward_Unit for cells of type Hazard_Forward_Unit.
Using template Arithmetic_Logic_Unit for cells of type Arithmetic_Logic_Unit.
Using template Jump_Branch_Unit for cells of type Jump_Branch_Unit.
Using template Fetch_Unit for cells of type Fetch_Unit.
<suppressed ~10 debug messages>
No more expansions possible.
Deleting now unused module $paramod\Register_File\WIDTH=32\DEPTH=5.
Deleting now unused module Address_Generator.
Deleting now unused module Arithmetic_Logic_Unit.
Deleting now unused module Fetch_Unit.
Deleting now unused module Hazard_Forward_Unit.
Deleting now unused module Immediate_Generator.
Deleting now unused module Instruction_Decoder.
Deleting now unused module Jump_Branch_Unit.
Deleting now unused module Load_Store_Unit.

8. Executing SETUNDEF pass (replace undef values with defined constants).
Removed 85 unused cells and 5119 unused wires.

9. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port phoeniX.CLK: Missing option -inpad.
Mapping port phoeniX.data_memory_interface_address using BUFX2.
Don't map inout port phoeniX.data_memory_interface_data: Missing option -inoutpad.
Mapping port phoeniX.data_memory_interface_enable using BUFX2.
Mapping port phoeniX.data_memory_interface_frame_mask using BUFX2.
Mapping port phoeniX.data_memory_interface_state using BUFX2.
Mapping port phoeniX.instruction_memory_interface_address using BUFX2.
Don't map input port phoeniX.instruction_memory_interface_data: Missing option -inpad.
Mapping port phoeniX.instruction_memory_interface_enable using BUFX2.
Mapping port phoeniX.instruction_memory_interface_frame_mask using BUFX2.
Mapping port phoeniX.instruction_memory_interface_state using BUFX2.
Don't map input port phoeniX.reset: Missing option -inpad.

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module phoeniX.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \phoeniX.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\Instruction_Decoder.$auto$simplemap.cc:517:simplemap_dlatch$4504 ($_DLATCH_P_) from module phoeniX.
Replaced 1 DFF cells.

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \phoeniX..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module phoeniX.

10.9. Rerunning OPT passes. (Maybe there is more to do..)

10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \phoeniX..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \phoeniX.
Performed a total of 0 changes.

10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\phoeniX'.
Removed a total of 0 cells.

10.13. Executing OPT_RMDFF pass (remove dff with constant values).

10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \phoeniX..

10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module phoeniX.

10.16. Finished OPT passes. (There is nothing left to do.)

11. Executing BLIF backend.

12. Printing statistics.

=== phoeniX ===

   Number of wires:               4252
   Number of wire bits:           5481
   Number of public wires:        4252
   Number of public wire bits:    5481
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5424
     $_DLATCH_P_                   132
     AND2X2                        101
     AOI21X1                       271
     AOI22X1                       171
     BUFX2                          76
     DFFPOSX1                      503
     INVX1                         883
     MUX2X1                         56
     NAND2X1                      1029
     NAND3X1                       362
     NOR2X1                        488
     NOR3X1                         81
     OAI21X1                      1069
     OAI22X1                        60
     OR2X2                          70
     XNOR2X1                        55
     XOR2X1                         17

Warnings: 19 unique messages, 19 total
End of script. Logfile hash: a2fe7da340
CPU: user 6.52s system 1.18s, MEM: 47.27 MB total, 40.52 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 19% 20x opt_merge (1 sec), 19% 21x opt_clean (1 sec), ...
Running getpowerground to determine power and ground net names.
getpowerground.tcl  /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef
Cleaning up output syntax
ypostproc.tcl phoeniX_mapped.blif phoeniX /usr/local/share/qflow/tech/osu018/osu018.sh vdd gnd 
Cleaning up blif file syntax
Running blifFanout (iterative)
Each iteration calls:
blifFanout -l 100 -c 20 -I phoeniX_nofanout -s nullstring -p /usr/local/share/qflow/tech/osu018/osu018_stdcells.lib -b BUFX2,CLKBUF1 -i A,A -o Y,Y tmp.blif phoeniX.blif

blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Top internal fanout is 95 (load 1619.46) from node fetch_unit.jump_branch_enable,
driven by OAI21X1 with strength 58.3189 (fF driven at latency 100)
Top fanout load-to-strength ratio is 27.769 (latency = 2776.9 ps)
Top input node fanout is 503 (load 14045.5) from node CLK.
Warning 1: load of 512.83 is 1.1243 times greater than strongest gate INVX8
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 125.933 is 1.13297 times greater than strongest gate OR2X2
Warning 3: load of 1026.07 is 17.6324 times greater than strongest gate NOR2X1
Warning 1023: load of 1017.61 is 17.6612 times greater than strongest gate NAND3X1
Warning 1044: load of 1629.46 is 27.9404 times greater than strongest gate OAI21X1
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
1118 gates exceed specified minimum load.
333 buffers were added.
124 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 5045    	Out: 4921    	-124
	"2" gates	In: 270    	Out: 365    	+95

Number of gates changed: 457
gates resized: 457
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Top internal fanout is 15 (load 512.833) from node _2907_,
driven by INVX4 with strength 228.066 (fF driven at latency 100)
Top fanout load-to-strength ratio is 4.6644 (latency = 466.44 ps)
Top input node fanout is 63 (load 2355.65) from node CLK.
Warning 1: load of 236.378 is 1.05062 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 12: load of 257.106 is 1.14275 times greater than strongest gate BUFX4
Warning 19: load of 260.923 is 1.15972 times greater than strongest gate BUFX4
Warning 25: load of 522.833 is 2.25733 times greater than strongest gate CLKBUF1
Warning 212: load of 335.68 is 2.65525 times greater than strongest gate DFFPOSX1
Warning 519: load of 168.682 is 2.92192 times greater than strongest gate OAI22X1
Warning 521: load of 187.135 is 3.24783 times greater than strongest gate NAND3X1
Warning 657: load of 191.749 is 3.29509 times greater than strongest gate NOR2X1
Warning 848: load of 281.432 is 4.83625 times greater than strongest gate NOR2X1
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
1214 gates exceed specified minimum load.
7 buffers were added.
275 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 4984    	Out: 4984    	+0
	"2" gates	In: 635    	Out: 363    	-272
	"4" gates	In: 15    	Out: 284    	+269
	"8" gates	In: 14    	Out: 17    	+3

Number of gates changed: 282
gates resized: 282
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Top internal fanout is 15 (load 512.833) from node _2907_,
driven by INVX8 with strength 456.133 (fF driven at latency 100)
Top fanout load-to-strength ratio is 4.6644 (latency = 466.44 ps)
Top input node fanout is 7 (load 104.787) from node CLK.
Warning 1: load of 427.27 is 1.89907 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 187: load of 522.833 is 2.25733 times greater than strongest gate CLKBUF1
Warning 342: load of 142.518 is 2.44909 times greater than strongest gate NOR2X1
Warning 452: load of 335.68 is 2.65525 times greater than strongest gate DFFPOSX1
Warning 759: load of 168.682 is 2.92192 times greater than strongest gate OAI22X1
Warning 761: load of 187.135 is 3.24783 times greater than strongest gate NAND3X1
Warning 897: load of 191.749 is 3.29509 times greater than strongest gate NOR2X1
Warning 1089: load of 281.432 is 4.83625 times greater than strongest gate NOR2X1
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
1459 gates exceed specified minimum load.
0 buffers were added.
7 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 4984    	Out: 4984    	+0
	"2" gates	In: 370    	Out: 363    	-7
	"4" gates	In: 284    	Out: 291    	+7
	"8" gates	In: 17    	Out: 17    	+0

Number of gates changed: 7
gates resized: 7
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Top internal fanout is 15 (load 529.084) from node _2907_,
driven by INVX8 with strength 456.133 (fF driven at latency 100)
Top fanout load-to-strength ratio is 4.6644 (latency = 466.44 ps)
Top input node fanout is 7 (load 104.787) from node CLK.
Warning 1: load of 539.084 is 2.39605 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 342: load of 142.518 is 2.44909 times greater than strongest gate NOR2X1
Warning 452: load of 335.68 is 2.65525 times greater than strongest gate DFFPOSX1
Warning 759: load of 168.682 is 2.92192 times greater than strongest gate OAI22X1
Warning 761: load of 187.135 is 3.24783 times greater than strongest gate NAND3X1
Warning 897: load of 191.749 is 3.29509 times greater than strongest gate NOR2X1
Warning 1089: load of 281.432 is 4.83625 times greater than strongest gate NOR2X1
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
1459 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 4984    	Out: 4984    	+0
	"2" gates	In: 363    	Out: 363    	+0
	"4" gates	In: 291    	Out: 291    	+0
	"8" gates	In: 17    	Out: 17    	+0

Number of gates changed: 0
gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/arvin/Desktop/QFlow_test/phoeniX/synthesis
Files:
   Verilog: /home/arvin/Desktop/QFlow_test/phoeniX/synthesis/phoeniX.rtl.v
   Verilog: /home/arvin/Desktop/QFlow_test/phoeniX/synthesis/phoeniX.rtlnopwr.v
   Verilog: /home/arvin/Desktop/QFlow_test/phoeniX/synthesis/phoeniX.rtlbb.v
   Spice:   /home/arvin/Desktop/QFlow_test/phoeniX/synthesis/phoeniX.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
spi2xspice.py "/usr/local/share/qflow/tech/osu018/osu018_stdcells.lib" -io_time=1n -time=100p -idelay=10p -odelay=100p -cload=500f phoeniX.spc phoeniX.xspice

Synthesis script ended on Thu 31 Aug 2023 02:02:44 PM +0330
